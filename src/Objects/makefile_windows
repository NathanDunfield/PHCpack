# This is a makefile suitable for Windows 10 platforms,
# it uses a more basic timing facility.
# The makefile works for cygwin, but cygwin is only used in the making
# of the executable "phc.exe".
# The makefile defines the instructions for "make phc"
# to build the executable "phc.exe" which is statically linked.
# A Windows 10 users can then run "phc.exe" in a command prompt window,
# cygwin is not needed for phc to run on Windows.

gpp=g++
# gpp=/cygdrive/c/tools/msys64/mingw64/bin/gcc
gcc=gcc
# /cygdrive/c/tools/msys64/mingw64/bin/gcc

# The QD library is compiled in the folder where QD_ROOT refers to.
# The QD library needs to be downloaded separately and installed in
# the folder ../QD.
# For the installation of QD do the following steps:
# 0/ ./configure CXX=g++ FC=gfortran
# 1/ cd src
#    make
# 2/ For some reason, libtool did not work.  Instead do
#    ar cru -o libqd.a c_dd.o c_qd.o dd_real.o dd_const.o fpu.o qd_real.o qd_const.o util.o bits.o
# ranlib libqd.a
#   
# The QD_ROOT and QD_LIB definitions below are used to locate
# the include files and the libqd.a.

QD_ROOT=../QD/qd-2.3.17
QD_LIB=../QD/qd-2.3.17/src/
PHCAda=../Ada
PHCLib=../LIB
MPILib=../MPI
PHCgpu=../GPU
PYTHON = c:/Python25
MINGCC = c:/mingw/bin/gcc
BIN=../bin
INCLULIBS=-I$(PHCAda)/System -I$(PHCAda)/System/Basic_Timer \
 -I$(PHCAda)/Math_Lib/Numbers -I$(PHCAda)/Math_Lib/QD \
 -I$(PHCAda)/Math_Lib/Vectors -I$(PHCAda)/Math_Lib/Matrices \
 -I$(PHCAda)/Math_Lib/Divisors -I$(PHCAda)/Math_Lib/Reduction \
 -I$(PHCAda)/Math_Lib/Polynomials -I$(PHCAda)/Math_Lib/Functions \
 -I$(PHCAda)/Math_Lib/Supports -I$(PHCAda)/Math_Lib/Circuits \
 -I$(PHCAda)/Math_Lib/Series -I$(PHCAda)/Math_Lib/AD \
 -I$(PHCAda)/Deformations/Solutions -I$(PHCAda)/Deformations/Homotopy \
 -I$(PHCAda)/Deformations/Newton -I$(PHCAda)/Deformations/Curves \
 -I$(PHCAda)/Deformations/End_Games -I$(PHCAda)/Deformations/Sweep \
 -I$(PHCAda)/Deformations/Trackers -I$(PHCAda)/Deformations/Continuation \
 -I$(PHCAda)/Root_Counts/Product -I$(PHCAda)/Root_Counts/Binomials \
 -I$(PHCAda)/Root_Counts/Implift -I$(PHCAda)/Root_Counts/Stalift \
 -I$(PHCAda)/Root_Counts/Dynlift -I$(PHCAda)/Root_Counts/Symmetry \
 -I$(PHCAda)/Root_Counts/MixedVol -I$(PHCAda)/Root_Counts/DEMiCs \
 -I$(PHCAda)/Root_Counts/Puiseux \
 -I$(PHCAda)/Schubert/SAGBI -I$(PHCAda)/Schubert/Pieri \
 -I$(PHCAda)/Schubert/Induction \
 -I$(PHCAda)/Components/Samplers -I$(PHCAda)/Components/Interpolators \
 -I$(PHCAda)/Components/Factorization -I$(PHCAda)/Components/Decomposition \
 -I$(PHCAda)/Components/Solver -I$(PHCAda)/Components/Tropical \
 -I$(PHCAda)/CtoPHC/Funky -I$(PHCAda)/CtoPHC/State -I$(MPILib) \
 -I$(PHCAda)/PHCtoC -I$(PHCAda)/Tasking -I$(PHCAda)/Main
# flags with full optimization :
# GNATFLAGS=-gnatv -O3 -gnatp -gnatv
# GNATOPTFLAGS=-gnatv -O3 -gnatp -gnatv
# flags without optimization :
GNATFLAGS=-gnatv -gnatwa -gnatVa
GNATOPTFLAGS=-gnatv -gnatwa -gnatVa
# flag with gnat95 restriction for CtoPHC
GNAT95FLAGS=-gnat95 -gnatv -O3 -gnatp

# the main executable is phc :

phc: lib.a feedback.o get_clock.o get_clocks_per_sec.o  \
        inputData.o outputData.o iTest.o fTest.o reltab.o \
        simplex4phc.o mvc4phc.o demicsrun4phc.o corecount.o \
        parameter.o lib2path.o
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) pieri_solver.adb
	gnatmake -c $(INCLULIBS) -I$(PHCAda)/PHCtoC/Main_full \
                    $(GNATFLAGS) phctop.adb
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gnatbind phctop use_c2phc pieri_solver
	gnatlink phctop syscon.o solcon.o phcpack.o feedback.o \
                 lib.a parameter.o lib2path.o \
                 inputData.o outputData.o iTest.o fTest.o reltab.o \
                 simplex4phc.o mvc4phc.o demicsrun4phc.o \
                 get_clock.o get_clocks_per_sec.o corecount.o \
                 $(QD_LIB)/libqd.a -o $(BIN)/phc -lm \
--LINK="g++ -static-libgcc -static-libstdc++ -Wl,-Bstatic,--whole-archive -Wl,--no-whole-archive"

phc_noqd: lib.a feedback.o get_clock.o get_clocks_per_sec.o  \
        inputData.o outputData.o iTest.o fTest.o reltab.o \
        simplex4phc.o mvc4phc.o demicsrun4phc.o corecount.o \
        parameter.o lib2path_d.o
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) pieri_solver.adb
	gnatmake -c $(INCLULIBS) -I$(PHCAda)/PHCtoC/Main_noqd \
		    $(GNATFLAGS) phctop.adb
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gnatbind phctop use_c2phc pieri_solver
	gnatlink phctop syscon.o solcon.o phcpack.o feedback.o \
                 lib.a parameter.o lib2path_d.o \
                 inputData.o outputData.o iTest.o fTest.o reltab.o \
                 simplex4phc.o mvc4phc.o demicsrun4phc.o \
                 get_clock.o get_clocks_per_sec.o corecount.o \
                 -o $(BIN)/phc -lm \
--LINK="g++ -static-libgcc -static-libstdc++ -Wl,-Bstatic,--whole-archive -Wl,--no-whole-archive"

# Test program to see if compiler works, "hello world" :

hello:
	gnatmake $(INCLULIBS) $(GNATFLAGS) hello.adb -o $(BIN)/hello

ada_hello:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ada_hello.adb
	gnatbl -o $(BIN)/ada_hello ada_hello.ali

# Test programs for the System library :

ts_time:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_time.adb -o $(BIN)/ts_time

ts_clock:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_clock.adb -o $(BIN)/ts_clock

ts_stamps:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_stamps.adb -o $(BIN)/ts_stamps

get_clock.o:
	gcc -c $(PHCAda)/System/Basic_Timer/get_clock.c

get_clocks_per_sec.o:
	gcc -c $(PHCAda)/System/Basic_Timer/get_clocks_per_sec.c

ts_ctimer: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_ctimer $(INCLULIBS) $(GNATFLAGS) ts_ctimer.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_timer: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_timer $(INCLULIBS) $(GNATFLAGS) ts_timer.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_syscall:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_syscall.adb -o $(BIN)/ts_syscall

ts_mach:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mach.adb -o $(BIN)/ts_mach

ts_cmdline:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cmdline.adb \
              -o $(BIN)/ts_cmdline

ts_byemess:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_byemess.adb \
              -o $(BIN)/ts_byemess

ts_strsplit:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_strsplit.adb \
              -o $(BIN)/ts_strsplit

ts_commuser:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_commuser.adb \
              -o $(BIN)/ts_commuser

ts_filescan:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_filescan.adb \
              -o $(BIN)/ts_filescan

ts_striscan:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_striscan.adb \
              -o $(BIN)/ts_striscan

ts_threads:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_threads.adb \
              -o $(BIN)/ts_threads

# Test programs for the library Numbers :

ts_strnum:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_strnum.adb -o $(BIN)/ts_strnum

ts_printf:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_printf.adb -o $(BIN)/ts_printf

ts_intnum: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_intnum.adb -o $(BIN)/ts_intnum \
                 -largs get_clock.o get_clocks_per_sec.o

ts_natnum: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_natnum.adb -o $(BIN)/ts_natnum \
                 -largs get_clock.o get_clocks_per_sec.o

ts_natdiv: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_natdiv.adb \
              -o $(BIN)/ts_natdiv -largs get_clock.o get_clocks_per_sec.o

ts_longflt:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_longflt.adb \
                 -o $(BIN)/ts_longflt

ts_karat:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_karat.adb -o $(BIN)/ts_karat

ts_fltnum: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_fltnum $(INCLULIBS) $(GNATFLAGS) \
                    ts_fltnum.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_cmpnum: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_cmpnum $(INCLULIBS) $(GNATFLAGS) \
                    ts_cmpnum.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_plrexp:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_plrexp.adb -o $(BIN)/ts_plrexp

ts_random:
	gnatmake  $(INCLULIBS) $(GNATFLAGS) ts_random.adb -o $(BIN)/ts_random

ts_extran:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_extran.adb -o $(BIN)/ts_extran

ts_matfun: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_matfun $(INCLULIBS) $(GNATFLAGS) ts_matfun.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_intval:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_intval.adb -o $(BIN)/ts_intval

ts_mpcst:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_mpcst.adb -o $(BIN)/ts_mpcst

ts_numbio:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_numbio.adb -o $(BIN)/ts_numbio

ts_isnan:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_isnan.adb -o $(BIN)/ts_isnan

# Test programs for Math_Lib/QD :

ts_dbldbl:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_dbldbl.adb -o $(BIN)/ts_dbldbl

ts_qddbl:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qddbl.adb -o $(BIN)/ts_qddbl

ts_ddcmplx:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ddcmplx.adb \
                 -o $(BIN)/ts_ddcmplx

ts_qdcmplx:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qdcmplx.adb \
                 -o $(BIN)/ts_qdcmplx

ts_mpddcv:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mpddcv.adb -o $(BIN)/ts_mpddcv

ts_mpqdcv:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mpqdcv.adb -o $(BIN)/ts_mpqdcv

ts_ddfun:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ddfun.adb -o $(BIN)/ts_ddfun

ts_qdfun:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qdfun.adb -o $(BIN)/ts_qdfun

ts_cmpexp:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cmpexp.adb -o $(BIN)/ts_cmpexp

# Test programs for Math_Lib/Vectors :

ts_natvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_natvec.adb \
              -o $(BIN)/ts_natvec

ts_intvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_intvec.adb \
              -o $(BIN)/ts_intvec

ts_fltvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_fltvec.adb \
              -o $(BIN)/ts_fltvec

ts_cmpvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cmpvec.adb \
              -o $(BIN)/ts_cmpvec

ts_ddvec:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_ddvec.adb -o $(BIN)/ts_ddvec

ts_qdvec:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_qdvec.adb -o $(BIN)/ts_qdvec

ts_strvec:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_strvec.adb -o $(BIN)/ts_strvec

ts_nesvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_nesvec.adb \
              -o $(BIN)/ts_nesvec

# Test programs for Matrices :

ts_natmat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_natmat.adb \
              -o $(BIN)/ts_natmat

ts_intmat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_intmat.adb \
              -o $(BIN)/ts_intmat

ts_fltmat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_fltmat.adb \
              -o $(BIN)/ts_fltmat

ts_fltdls:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_fltdls.adb \
              -o $(BIN)/ts_fltdls

ts_cmpmat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cmpmat.adb \
              -o $(BIN)/ts_cmpmat

ts_ddmat:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_ddmat.adb -o $(BIN)/ts_ddmat

ts_qdmat:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_qdmat.adb -o $(BIN)/ts_qdmat

# Test programs for Math_Lib/Divisors :

ts_gcd:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_gcd.adb -o $(BIN)/ts_gcd

ts_intlina:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_intlina.adb \
              -o $(BIN)/ts_intlina

ts_smith:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_smith.adb -o $(BIN)/ts_smith

ts_intinv:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_intinv.adb -o $(BIN)/ts_intinv

ts_circuit:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_circuit.adb \
              -o $(BIN)/ts_circuit

# Test programs for Math_Lib/Reduction :

ts_fltlu: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_fltlu $(INCLULIBS) $(GNATOPTFLAGS) ts_fltlu.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_cmplu: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_cmplu $(INCLULIBS) $(GNATOPTFLAGS) ts_cmplu.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_ddlu: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_ddlu $(INCLULIBS) $(GNATOPTFLAGS) ts_ddlu.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_qdlu: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_qdlu $(INCLULIBS) $(GNATOPTFLAGS) ts_qdlu.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_qrd: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_qrd $(INCLULIBS) $(GNATOPTFLAGS) ts_qrd.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_svd:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_svd.adb -o $(BIN)/ts_svd

ts_rowred:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_rowred.adb -o $(BIN)/ts_rowred

ts_eigval:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_eigval.adb -o $(BIN)/ts_eigval

ts_mgs: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_mgs $(INCLULIBS) $(GNATOPTFLAGS) ts_mgs.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_mgsrnk:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_mgsrnk.adb -o $(BIN)/ts_mgsrnk

ts_backsubs:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_backsubs.adb \
              -o $(BIN)/ts_backsubs

ts_perflu: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_perflu \
                    $(INCLULIBS) $(GNATOPTFLAGS) ts_perflu.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_vvlu:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_vvlu.adb -o $(BIN)/ts_vvlu

ts_vmplu:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_vmplu.adb -o $(BIN)/ts_vmplu

# Test programs for Math_Lib/Polynomials :

ts_poly:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_poly.adb \
              -o $(BIN)/ts_poly

ts_laurpoly:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_laurpoly.adb \
              -o $(BIN)/ts_laurpoly

ts_laurlist:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_laurlist.adb \
              -o $(BIN)/ts_laurlist

ts_rpol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_rpol.adb -o $(BIN)/ts_rpol

ts_ddpol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ddpol.adb -o $(BIN)/ts_ddpol

ts_qdpol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qdpol.adb -o $(BIN)/ts_qdpol

ts_polmat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_polmat.adb \
              -o $(BIN)/ts_polmat

ts_jaco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_jaco.adb -o $(BIN)/ts_jaco

ts_parse:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_parse.adb -o $(BIN)/ts_parse

ts_subs:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_subs.adb -o $(BIN)/ts_subs

ts_tabform:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_tabform -o $(BIN)/ts_tabform

ts_randpoly:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_randpoly.adb \
              -o $(BIN)/ts_randpoly

ts_str2pol:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_str2pol.adb \
              -o $(BIN)/ts_str2pol

ts_termlist: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_termlist.adb \
              -o $(BIN)/ts_termlist \
              -largs get_clock.o get_clocks_per_sec.o

ts_rwspol:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_rwspol.adb \
              -o $(BIN)/ts_rwspol

ts_nbrvar:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_nbrvar.adb \
              -o $(BIN)/ts_nbrvar

ts_hessian:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_hessian.adb \
              -o $(BIN)/ts_hessian

# Test programs for Math_Lib/Functions :

ts_evaline:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_evaline.adb \
                 -o $(BIN)/ts_evaline

ts_evalpoly: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_evalpoly.adb \
              -o $(BIN)/ts_evalpoly \
              -largs get_clock.o get_clocks_per_sec.o

ts_evalform:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_evalform.adb \
                 -o $(BIN)/ts_evalform

ts_lineva: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_lineva.adb \
              -o $(BIN)/ts_lineva \
              -largs get_clock.o get_clocks_per_sec.o

ts_polyflat:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_polyflat.adb \
                 -o $(BIN)/ts_polyflat

ts_perfeval: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_perfeval.adb \
              -o $(BIN)/ts_perfeval \
              -largs get_clock.o get_clocks_per_sec.o

ts_expvec:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_expvec.adb -o $(BIN)/ts_expvec

ts_evddpol:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_evddpol.adb \
              -o $(BIN)/ts_evddpol

# Test programs for Math_Lib/Circuits :

ts_cffsup:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_cffsup -o $(BIN)/ts_cffsup

ts_gradcirc:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_gradcirc -o $(BIN)/ts_gradcirc

ts_speel: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_speel -o $(BIN)/ts_speel \
                 -largs get_clock.o get_clocks_per_sec.o

ts_speelsys: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_speelsys.adb \
                 -o $(BIN)/ts_speelsys -largs get_clock.o get_clocks_per_sec.o

ts_cycfun: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_cycfun.adb \
              -o $(BIN)/ts_cycfun -largs get_clock.o get_clocks_per_sec.o

ts_vmpeval:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_vmpeval.adb \
              -o $(BIN)/ts_vmpeval

ts_vmpdiff: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_vmpdiff.adb \
              -o $(BIN)/ts_vmpdiff -largs get_clock.o get_clocks_per_sec.o

ts_speelser:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_speelser.adb \
              -o $(BIN)/ts_speelser

ts_speelcnv:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_speelcnv.adb \
              -o $(BIN)/ts_speelcnv

ts_fabry:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_fabry.adb -o $(BIN)/ts_fabry

ts_evalcnv:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_evalcnv.adb \
              -o $(BIN)/ts_evalcnv

# Test programs for Math_Lib/Supports :

ts_basex:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_basex.adb \
              -o $(BIN)/ts_basex

ts_feasi:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_feasi.adb \
              -o $(BIN)/ts_feasi

ts_enurs:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_enurs.adb \
              -o $(BIN)/ts_enurs

ts_diclp:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_diclp.adb \
              -o $(BIN)/ts_diclp

ts_givrot:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_givrot.adb \
              -o $(BIN)/ts_givrot

ts_lstvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_lstvec.adb \
              -o $(BIN)/ts_lstvec

ts_fvector:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_fvector.adb \
              -o $(BIN)/ts_fvector

ts_giftwrap:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_giftwrap.adb \
              -o $(BIN)/ts_giftwrap

ts_giftwcon:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_giftwcon.adb \
              -o $(BIN)/ts_giftwcon

# Test programs for the Math_Lib/Series library :

ts_pstrunc:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_pstrunc.adb \
              -o $(BIN)/ts_pstrunc

ts_bincff:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_bincff.adb \
              -o $(BIN)/ts_bincff

ts_series:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_series.adb \
              -o $(BIN)/ts_series

ts_series2:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_series2.adb \
              -o $(BIN)/ts_series2

ts_cseries:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_cseries.adb \
              -o $(BIN)/ts_cseries

ts_servec:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_servec.adb \
              -o $(BIN)/ts_servec

ts_servec2:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_servec2.adb \
              -o $(BIN)/ts_servec2

ts_cservec:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_cservec.adb \
              -o $(BIN)/ts_cservec

ts_sermat:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_sermat.adb \
              -o $(BIN)/ts_sermat

ts_sermat2:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_sermat2.adb \
              -o $(BIN)/ts_sermat2

ts_csermat:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_csermat.adb \
              -o $(BIN)/ts_csermat

ts_seritp:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_seritp.adb \
              -o $(BIN)/ts_seritp

ts_seritp2:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_seritp2.adb \
              -o $(BIN)/ts_seritp2

ts_cseritp:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_cseritp.adb \
              -o $(BIN)/ts_cseritp

ts_sersin:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_sersin.adb \
              -o $(BIN)/ts_sersin

ts_sersin2:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_sersin2.adb \
              -o $(BIN)/ts_sersin2

ts_csersin:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_csersin.adb \
              -o $(BIN)/ts_csersin

ts_serlin: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_serlin.adb \
              -o $(BIN)/ts_serlin \
              -largs get_clock.o get_clocks_per_sec.o

ts_serlin2: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_serlin2.adb \
              -o $(BIN)/ts_serlin2 \
              -largs get_clock.o get_clocks_per_sec.o

ts_cserlin: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_cserlin.adb \
              -o $(BIN)/ts_cserlin \
              -largs get_clock.o get_clocks_per_sec.o

ts_cserlin2: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_cserlin2.adb \
              -o $(BIN)/ts_cserlin2 \
              -largs get_clock.o get_clocks_per_sec.o

ts_serinv:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_serinv.adb \
              -o $(BIN)/ts_serinv

ts_cserinv:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_cserinv.adb \
              -o $(BIN)/ts_cserinv

ts_serpol:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_serpol.adb \
              -o $(BIN)/ts_serpol

ts_cserpol:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_cserpol.adb \
              -o $(BIN)/ts_cserpol

ts_sersys:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_sersys.adb \
              -o $(BIN)/ts_sersys

ts_csersys:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_csersys.adb \
              -o $(BIN)/ts_csersys

ts_sercffpol:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_sercffpol.adb \
              -o $(BIN)/ts_sercffpol

# Test programs for the Math_Lib/AD library :

ts_monom:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_monom.adb \
              -o $(BIN)/ts_monom

ts_monvec:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_monvec.adb \
              -o $(BIN)/ts_monvec

ts_polvec:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_polvec.adb \
              -o $(BIN)/ts_polvec

ts_sys2vec:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_sys2vec.adb \
              -o $(BIN)/ts_sys2vec

# Test programs for the Deformations/Solutions library :

ts_solfilt:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_solfilt.adb \
              -o $(BIN)/ts_solfilt

ts_sols:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_sols.adb -o $(BIN)/ts_sols

ts_ddsols:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_ddsols.adb -o $(BIN)/ts_ddsols

ts_qdsols:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_qdsols.adb -o $(BIN)/ts_qdsols

ts_solar:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_solar.adb -o $(BIN)/ts_solar

ts_mapsols_io:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_mapsols_io.adb \
                 -o $(BIN)/ts_mapsols_io

ts_dicsols_io:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_dicsols_io.adb \
                 -o $(BIN)/ts_dicsols_io

ts_grepsols:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_grepsols.adb \
                 -o $(BIN)/ts_grepsols

mergesols:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) mergesols.adb -o $(BIN)/mergesols

ts_contab:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_contab.adb -o $(BIN)/ts_contab

ts_selsol:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_selsol.adb -o $(BIN)/ts_selsol

ts_solstr:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_solstr.adb -o $(BIN)/ts_solstr

ts_quadpart: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_quadpart.adb \
              -o $(BIN)/ts_quadpart \
              -largs get_clock.o get_clocks_per_sec.o

ts_quad: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_quad.adb -o $(BIN)/ts_quad \
                -largs get_clock.o get_clocks_per_sec.o

ts_soldrop:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_soldrop.adb \
              -o $(BIN)/ts_soldrop

ts_ptlists:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_ptlists.adb \
              -o $(BIN)/ts_ptlists

ts_trasols_io:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_trasols_io.adb \
              -o $(BIN)/ts_trasols_io

ts_mixres:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_mixres.adb -o $(BIN)/ts_mixres

# Test programs for the Deformations/Homotopy library :

ts_drivscal: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_drivscal \
              -o $(BIN)/ts_drivscal \
              -largs get_clock.o get_clocks_per_sec.o

ts_scal:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_scal.adb -o $(BIN)/ts_scal

ts_drivred: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_drivred.adb \
              -o $(BIN)/ts_drivred \
              -largs get_clock.o get_clocks_per_sec.o

ts_homotopy:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_homotopy.adb \
                 -o $(BIN)/ts_homotopy

ts_homline:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_homline.adb \
                 -o $(BIN)/ts_homline

ts_linsol:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_linsol.adb -o $(BIN)/ts_linsol

ts_qdhom:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_qdhom.adb -o $(BIN)/ts_qdhom

ts_poldrop:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_poldrop.adb \
              -o $(BIN)/ts_poldrop

ts_evalhomt: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_evalhomt.adb \
              -o $(BIN)/ts_evalhomt \
              -largs get_clock.o get_clocks_per_sec.o

ts_vmphom:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_vmphom.adb -o $(BIN)/ts_vmphom

ts_scalplane:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_scalplane.adb \
              -o $(BIN)/ts_scalplane

ts_multproj:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_multproj.adb \
              -o $(BIN)/ts_multproj

# Test programs for the Deformations/Newton library :

ts_mreseva:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mreseva.adb \
              -o $(BIN)/ts_mreseva

ts_rootrefi:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_rootrefi.adb \
              -o $(BIN)/ts_rootrefi

ts_newton:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_newton.adb \
              -o $(BIN)/ts_newton

ts_realnewt:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_realnewt.adb \
              -o $(BIN)/ts_realnewt

ts_numdif:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_numdif.adb \
              -o $(BIN)/ts_numdif

ts_jactrees:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_jactrees.adb \
              -o $(BIN)/ts_jactrees

ts_deftrees:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_deftrees.adb \
              -o $(BIN)/ts_deftrees

ts_deflate: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_deflate.adb \
              -o $(BIN)/ts_deflate \
              -largs get_clock.o get_clocks_per_sec.o

ts_straight: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_straight.adb \
              -o $(BIN)/ts_straight \
              -largs get_clock.o get_clocks_per_sec.o

ts_stair:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_stair.adb \
              -o $(BIN)/ts_stair

ts_defmat: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_defmat.adb \
              -o $(BIN)/ts_defmat \
              -largs get_clock.o get_clocks_per_sec.o

ts_multip:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_multip.adb \
              -o $(BIN)/ts_multip

ts_muldef:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_muldef.adb \
              -o $(BIN)/ts_muldef

ts_deflop:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_deflop.adb -o $(BIN)/ts_deflop

ts_ddnewt: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_ddnewt.adb \
              -o $(BIN)/ts_ddnewt \
              -largs get_clock.o get_clocks_per_sec.o

ts_qdnewt: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_qdnewt.adb \
              -o $(BIN)/ts_qdnewt \
              -largs get_clock.o get_clocks_per_sec.o

ts_vmpnewt:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_vmpnewt.adb \
              -o $(BIN)/ts_vmpnewt

# Test programs for the Deformations/Curves library :

ts_durker: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_durker.adb \
              -o $(BIN)/ts_durker \
              -largs get_clock.o get_clocks_per_sec.o

ts_extrapol: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_extrapol.adb \
              -o $(BIN)/ts_extrapol \
              -largs get_clock.o get_clocks_per_sec.o

ts_extrapts: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_extrapts.adb \
              -o $(BIN)/ts_extrapts \
              -largs get_clock.o get_clocks_per_sec.o

ts_sernew:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_sernew.adb \
              -o $(BIN)/ts_sernew

ts_sersol:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_sersol.adb \
              -o $(BIN)/ts_sersol

ts_serhom:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_serhom.adb \
              -o $(BIN)/ts_serhom

ts_serpred: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_serpred.adb \
              -o $(BIN)/ts_serpred \
              -largs get_clock.o get_clocks_per_sec.o

ts_serpath: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_serpath.adb \
              -o $(BIN)/ts_serpath \
              -largs get_clock.o get_clocks_per_sec.o

ts_serpade: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_serpade.adb \
              -o $(BIN)/ts_serpade \
              -largs get_clock.o get_clocks_per_sec.o

ts_padepred: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_padepred.adb \
              -o $(BIN)/ts_padepred \
              -largs get_clock.o get_clocks_per_sec.o

ts_jacrabin:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_jacrabin.adb \
              -o $(BIN)/ts_jacrabin

ts_nxtpadsol: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_nxtpadsol.adb \
              -o $(BIN)/ts_nxtpadsol \
              -largs get_clock.o get_clocks_per_sec.o

ts_hesscrit: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_hesscrit.adb \
              -o $(BIN)/ts_hesscrit \
              -largs get_clock.o get_clocks_per_sec.o

ts_hesspred: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_hesspred.adb \
              -o $(BIN)/ts_hesspred \
              -largs get_clock.o get_clocks_per_sec.o

ts_predstep: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_predstep.adb \
              -o $(BIN)/ts_predstep \
              -largs get_clock.o get_clocks_per_sec.o

ts_sernewcnv:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_sernewcnv.adb \
              -o $(BIN)/ts_sernewcnv

# Test programs for the Deformations/End_Games library :

ts_vlprs:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_vlprs.adb -o $(BIN)/ts_vlprs

postpoco: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) postpoco.adb \
              -o $(BIN)/postpoco \
              -largs get_clock.o get_clocks_per_sec.o

valipoco:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) valipoco.adb -o $(BIN)/valipoco

# Test programs for the Deformations/Sweep library :

ts_parcon: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_parcon $(INCLULIBS) $(GNATFLAGS) ts_parcon.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_realcont: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_realcont $(INCLULIBS) $(GNATFLAGS) \
                    ts_realcont.adb -largs get_clock.o get_clocks_per_sec.o

# Test programs for the Deformations/Trackers library :

ts_preco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_preco.adb \
              -o $(BIN)/ts_preco

ts_correct: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_correct.adb \
              -o $(BIN)/ts_correct \
              -largs get_clock.o get_clocks_per_sec.o

ts_ortocor: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ortocor.adb \
              -o $(BIN)/ts_ortocor \
              -largs get_clock.o get_clocks_per_sec.o

ts_path: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_path.adb \
              -o $(BIN)/ts_path \
              -largs get_clock.o get_clocks_per_sec.o

ts_track: get_clock.o get_clocks_per_sec.o
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_track.adb \
              -o $(BIN)/ts_track \
              -largs get_clock.o get_clocks_per_sec.o

ts_nxtsol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_nxtsol.adb \
              -o $(BIN)/ts_nxtsol

# Test programs for the Deformations/Continuation library :

ts_pactun:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_pactun.adb -o $(BIN)/ts_pactun

ts_autotune:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_autotune.adb \
              -o $(BIN)/ts_autotune

ts_poco: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_poco $(INCLULIBS) $(GNATFLAGS) ts_poco.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_bbpoco: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_bbpoco $(INCLULIBS) $(GNATFLAGS) ts_bbpoco.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_exp:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_exp.adb -o $(BIN)/ts_exp

mypoco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) mypoco.adb -o $(BIN)/mypoco

# Test programs for the Root_Counts/Product homotopies library :

ts_startsys:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_startsys.adb \
              -o $(BIN)/ts_startsys

ts_drivmhom:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivmhom.adb \
              -o $(BIN)/ts_drivmhom

ts_drivmuho:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivmuho.adb \
              -o $(BIN)/ts_drivmuho

ts_drivss:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivss.adb \
              -o $(BIN)/ts_drivss

# Test programs in the Root_Counts/Simpomials library :

ts_fewsys:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_fewsys.adb \
              -o $(BIN)/ts_fewsys

ts_spasol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_spasol.adb \
              -o $(BIN)/ts_spasol

# Test programs for the Implicit lifting library :

ts_powlis:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_powlis.adb
	gnatbl -o $(BIN)/ts_powlis ts_powlis.ali

ts_drivpts:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_drivpts.adb
	gnatbl -o $(BIN)/ts_drivpts ts_drivpts.ali

ts_binsolve:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_binsolve.adb
	gnatbl -o $(BIN)/ts_binsolve ts_binsolve.ali

ts_fewsolve:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_fewsolve.adb
	gnatbl -o $(BIN)/ts_fewsolve ts_fewsolve.ali

ts_impvol:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_impvol.adb
	gnatbl -o $(BIN)/ts_impvol ts_impvol.ali

ts_drivimpl:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_drivimpl.adb
	gnatbl -o $(BIN)/ts_drivimpl ts_drivimpl.ali

# Test programs for the static lifting library :

ts_conint:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_conint.adb
	gnatbl -o $(BIN)/ts_conint ts_conint.ali

ts_mixture:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_mixture.adb
	gnatbl -o $(BIN)/ts_mixture ts_mixture.ali

ts_mixvol:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_mixvol.adb
	gnatbl -o $(BIN)/ts_mixvol ts_mixvol.ali

ts_drivcrit:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_drivcrit.adb
	gnatbl -o $(BIN)/ts_drivcrit ts_drivcrit.ali

ts_drivstal:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_drivstal.adb
	gnatbl -o $(BIN)/ts_drivstal ts_drivstal.ali

# Test programs for the Dynamic lifting library :

ts_dyntri:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_dyntri.adb
	gnatbl -o $(BIN)/ts_dyntri ts_dyntri.ali

ts_drivmink:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_drivmink.adb
	gnatbl -o $(BIN)/ts_drivmink ts_drivmink.ali

ts_drivdynl:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_drivdynl.adb
	gnatbl -o $(BIN)/ts_drivdynl ts_drivdynl.ali

# Test programs for the Symmetry library :

ts_equpol:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_equpol.adb
	gnatbl -o $(BIN)/ts_equpol ts_equpol.ali

ts_drivsss:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_drivsss.adb
	gnatbl -o $(BIN)/ts_drivsss ts_drivsss.ali

# Test programs for the Puiseux library :

ts_degcurve:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_degcurve.adb
	gnatbl -o $(BIN)/ts_degcurve ts_degcurve.ali

# Test programs for the Root_Counts/DEMiCs library :

ts_calldemics:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_calldemics.adb \
              -o $(BIN)/ts_calldemics

DEMiCs_CFLAGS = -O3 -DNDEBUG

inputData.o:
	$(gpp) $(DEMiCs_CFLAGS) -c $(PHCAda)/Root_Counts/DEMiCs/inputData.cpp

iTest.o:
	$(gpp) $(DEMiCs_CFLAGS) -c $(PHCAda)/Root_Counts/DEMiCs/iTest.cpp

fTest.o:
	$(gpp) $(DEMiCs_CFLAGS) -c $(PHCAda)/Root_Counts/DEMiCs/fTest.cpp

random_windows.o:
	$(gpp) $(DEMiCs_CFLAGS) -c \
               $(PHCAda)/Root_Counts/DEMiCs/random_windows.cpp

simplex.o:
	$(gpp) $(DEMiCs_CFLAGS) -c $(PHCAda)/Root_Counts/DEMiCs/simplex.cpp

reltab.o:
	$(gpp) $(DEMiCs_CFLAGS) -c $(PHCAda)/Root_Counts/DEMiCs/reltab.cpp

mvc.o:
	$(gpp) $(DEMiCs_CFLAGS) -c $(PHCAda)/Root_Counts/DEMiCs/mvc.cpp

main.o:
	$(gpp) $(DEMiCs_CFLAGS) -c $(PHCAda)/Root_Counts/DEMiCs/main.cpp

demics_objects = inputData.o iTest.o fTest.o simplex.o reltab.o mvc.o main.o

demics: $(demics_objects)
	$(gpp) -o $(BIN)/demics $(DEMiCs_CFLAGS) $(demics_objects) -lm

ts_inputData:
	$(gpp) $(DEMiCs_CFLAGS) -c $(PHCAda)/Root_Counts/DEMiCs/inputData.cpp
	$(gpp) $(DEMiCs_CFLAGS) -c \
               $(PHCAda)/Root_Counts/DEMiCs/ts_inputData.cpp
	$(gpp) -o $(BIN)/ts_inputData $(DEMiCs_CFLAGS) ts_inputData.o \
                  inputData.o -lm

ts_outdata:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_outdata.adb \
              -o $(BIN)/ts_outdata

ts_outputData:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	$(gpp) -O2 -Dcompilewgpp=1 \
               -c $(PHCAda)/Root_Counts/DEMiCs/outputData.cpp
	$(gpp) -O2 -Dcompilewgpp=1 \
	       -c $(PHCAda)/Root_Counts/DEMiCs/ts_outputData.cpp
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc ts_outputData.o outputData.o \
                 -o $(BIN)/ts_outputData -lm --LINK=$(gpp)

outputData.o:
	$(gpp) -O2 -Dcompilewgpp=1 \
               -c $(PHCAda)/Root_Counts/DEMiCs/outputData.cpp

simplex4phc.o:
	$(gpp) -Dcompilewgpp=1 -Dcompile4phc=1 $(DEMiCS_CFLAGS) \
            -c $(PHCAda)/Root_Counts/DEMiCs/simplex.cpp -o simplex4phc.o

mvc4phc.o:
	$(gpp) -Dcompilewgpp=1 -Dcompile4phc=1 $(DEMiCS_CFLAGS) \
            -c $(PHCAda)/Root_Counts/DEMiCs/mvc.cpp -o mvc4phc.o

demicsrun4phc.o:
	$(gpp) -Dcompilewgpp=1 -Dcompile4phc=1 $(DEMiCS_CFLAGS) \
            -c $(PHCAda)/Root_Counts/DEMiCs/demicsrun.cpp -o demicsrun4phc.o

demicsrun.o:
	$(gpp) $(DEMiCs_CFLAGS) -c $(PHCAda)/Root_Counts/DEMiCs/demicsrun.cpp

ts_demicsrun: inputData.o outputData.o iTest.o fTest.o \
              simplex4phc.o reltab.o mvc4phc.o demicsrun4phc.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_demicsrun.adb \
                 -o ts_demicsrun.o
	gnatbind ts_demicsrun use_c2phc
	gnatlink ts_demicsrun inputData.o outputData.o iTest.o fTest.o \
                 get_clock.o get_clocks_per_sec.o \
                 simplex4phc.o reltab.o mvc4phc.o demicsrun4phc.o \
                 -o $(BIN)/ts_demicsrun --LINK=$(gpp) 

# Test programs for SAGBI library in numerical Schubert calculus :

ts_subsets:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_subsets.adb
	gnatbl -o $(BIN)/ts_subsets ts_subsets.ali

ts_brackets:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_brackets.adb
	gnatbl -o $(BIN)/ts_brackets ts_brackets.ali

ts_brackmons:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_brackmons.adb
	gnatbl -o $(BIN)/ts_brackmons ts_brackmons.ali

ts_brackpols:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_brackpols.adb
	gnatbl -o $(BIN)/ts_brackpols ts_brackpols.ali

ts_straighten:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_straighten.adb
	gnatbl -o $(BIN)/ts_straighten ts_straighten.ali

ts_expand:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_expand.adb
	gnatbl -o $(BIN)/ts_expand ts_expand.ali

ts_local:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_local.adb
	gnatbl -o $(BIN)/ts_local ts_local.ali

ts_mathom:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_mathom.adb
	gnatbl -o $(BIN)/ts_mathom ts_mathom.ali

ts_cheby:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_cheby.adb
	gnatbl -o $(BIN)/ts_cheby ts_cheby.ali

ts_shapiro:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_shapiro.adb
	gnatbl -o $(BIN)/ts_shapiro ts_shapiro.ali

ts_eremenko:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_eremenko.adb
	gnatbl -o $(BIN)/ts_eremenko ts_eremenko.ali

ts_detrock:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_detrock.adb
	gnatbl -o $(BIN)/ts_detrock ts_detrock.ali

ts_sagbi:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_sagbi.adb
	gnatbl -o $(BIN)/ts_sagbi ts_sagbi.ali

ts_topos:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_topos.adb
	gnatbl -o $(BIN)/ts_topos ts_topos.ali

# Test programs for Pieri library in numerical Schubert calculus :

ts_org_pieri:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_org_pieri.adb
	gnatbl -o $(BIN)/ts_org_pieri ts_org_pieri.ali

ts_canocurv:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_canocurv.adb
	gnatbl -o $(BIN)/ts_canocurv ts_canocurv.ali

ts_matinv:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_matinv.adb
	gnatbl -o $(BIN)/ts_matinv ts_matinv.ali

ts_pieri:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_pieri.adb
	gnatbl -o $(BIN)/ts_pieri ts_pieri.ali

ts_posets:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_posets.adb
	gnatbl -o $(BIN)/ts_posets ts_posets.ali

ts_detsys:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_detsys.adb
	gnatbl -o $(BIN)/ts_detsys ts_detsys.ali

ts_defpos:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_defpos.adb
	gnatbl -o $(BIN)/ts_defpos ts_defpos.ali

ts_piroco:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_piroco.adb
	gnatbl -o $(BIN)/ts_piroco ts_piroco.ali

# Test programs for Induction library in numerical Schubert calculus :

ts_checkers:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_checkers.adb
	gnatbl -o $(BIN)/ts_checkers ts_checkers.ali

ts_induce:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_induce.adb
	gnatbl -o $(BIN)/ts_induce ts_induce.ali

ts_flagcond:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_flagcond.adb
	gnatbl -o $(BIN)/ts_flagcond ts_flagcond.ali

# Test programs for the evaluators :

ts_cyclic7:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_cyclic7.adb
	gnatbl -o $(BIN)/ts_cyclic7 ts_cyclic7.ali

solve_cyclic7:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) solve_cyclic7.adb
	gnatbl -o $(BIN)/solve_cyclic7 solve_cyclic7.ali

# Test programs for the Experiments/ERMCC :

ts_rbasex:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_rbasex.adb
	gnatbl -o $(BIN)/ts_basex ts_rbasex.ali

ts_rfeasi:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_rfeasi.adb
	gnatbl -o $(BIN)/ts_rfeasi ts_rfeasi.ali

ts_mcc:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_mcc.adb
	gnatbl -o $(BIN)/ts_mcc ts_mcc.ali

ts_circuits1:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_circuits.adb
	gnatbl -o $(BIN)/ts_circuits ts_circuits.ali

ts_enum:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_enum.adb
	gnatbl -o $(BIN)/ts_enum ts_enum.ali

# Test programs for the Experiments/ToricNewt :

ts_ransup:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_ransup.adb
	gnatbl -o $(BIN)/ts_ransup ts_ransup.ali

ts_norfan:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_norfan.adb
	gnatbl -o $(BIN)/ts_norfan ts_norfan.ali

ts_facnor:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_facnor.adb
	gnatbl -o $(BIN)/ts_facnor ts_facnor.ali

rancond:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) rancond.adb
	gnatbl -o $(BIN)/rancond rancond.ali

ts_torsys:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_torsys.adb
	gnatbl -o $(BIN)/ts_torsys ts_torsys.ali

ts_binpow:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_binpow.adb
	gnatbl -o $(BIN)/ts_binpow ts_binpow.ali

# Test programs for the Components/Samplers library :

ts_roots:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_roots.adb
	gnatbl -o $(BIN)/ts_roots ts_roots.ali

ts_hyprts:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_hyprts.adb
	gnatbl -o $(BIN)/ts_hyprts ts_hyprts.ali

ts_hyppts:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_hyppts.adb
	gnatbl -o $(BIN)/ts_hyppts ts_hyppts.ali

ts_unisam:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_unisam.adb
	gnatbl -o $(BIN)/ts_unisam ts_unisam.ali

ts_hypsam:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_hypsam.adb
	gnatbl -o $(BIN)/ts_hypsam ts_hypsam.ali

ts_planes:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_planes.adb
	gnatbl -o $(BIN)/ts_planes ts_planes.ali

ts_flag:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_flag.adb
	gnatbl -o $(BIN)/ts_flag ts_flag.ali

ts_coords:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_coords.adb
	gnatbl -o $(BIN)/ts_coords ts_coords.ali

ts_itrack: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_itrack $(INCLULIBS) $(GNATFLAGS) ts_itrack.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_ispan: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_ispan $(INCLULIBS) $(GNATFLAGS) ts_ispan.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_inewt: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_inewt $(INCLULIBS) $(GNATFLAGS) ts_inewt.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_iwset: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_iwset $(INCLULIBS) $(GNATFLAGS) ts_iwset.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_ilocal: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_ilocal $(INCLULIBS) $(GNATFLAGS) ts_ilocal.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_sampar: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_sampar $(INCLULIBS) ts_sampar.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_sample: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_sample $(INCLULIBS) $(GNATFLAGS) ts_sample.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_mulsam: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_mulsam $(INCLULIBS) $(GNATFLAGS) ts_mulsam.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_mulhom:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_mulhom.adb
	gnatbl -o $(BIN)/ts_mulhom ts_mulhom.ali

# Test programs for the Components/Interpolators library :

ts_stpolin:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_stpolin.adb
	gnatbl -o $(BIN)/ts_stpolin ts_stpolin.ali

ts_mupolin:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_mupolin.adb
	gnatbl -o $(BIN)/ts_mupolin ts_mupolin.ali

ts_adpolin:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_adpolin.adb
	gnatbl -o $(BIN)/ts_adpolin ts_adpolin.ali

ts_project:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_project.adb
	gnatbl -o $(BIN)/ts_project ts_project.ali

ts_span:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_span.adb
	gnatbl -o $(BIN)/ts_span ts_span.ali

ts_filter:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_filter.adb
	gnatbl -o $(BIN)/ts_filter ts_filter.ali

ts_nbterms:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_nbterms.adb
	gnatbl -o $(BIN)/ts_nbterms ts_nbterms.ali

ts_divdif: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_divdif $(INCLULIBS) $(GNATFLAGS) ts_divdif.adb \
                 -largs get_clock.o get_clocks_per_sec.o
ts_dvdexp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_dvdexp.adb
	gnatbl -o $(BIN)/ts_dvdexp ts_dvdexp.ali

ts_newint:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_newint.adb
	gnatbl -o $(BIN)/ts_newint ts_newint.ali

ts_powtrc:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_powtrc.adb
	gnatbl -o $(BIN)/ts_powtrc ts_powtrc.ali

ts_traces: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_traces $(INCLULIBS) $(GNATFLAGS) ts_traces.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_trapol: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_trapol $(INCLULIBS) $(GNATFLAGS) ts_trapol.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_rewrite:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_rewrite.adb
	gnatbl -o $(BIN)/ts_rewrite ts_rewrite.ali

ts_elim:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_elim.adb
	gnatbl -o $(BIN)/ts_elim ts_elim.ali

ts_embed:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_embed.adb
	gnatbl -o $(BIN)/ts_embed ts_embed.ali

ts_square:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_square.adb
	gnatbl -o $(BIN)/ts_square ts_square.ali

ts_squemb:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_squemb.adb
	gnatbl -o $(BIN)/ts_squemb ts_squemb.ali

# Test programs in the Components/Factorization library :

ts_irco: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_irco $(INCLULIBS) $(GNATFLAGS) ts_irco.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_rwpoly:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_rwpoly.adb
	gnatbl -o $(BIN)/ts_rwpoly ts_rwpoly.ali

ts_combfac: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_combfac $(INCLULIBS) $(GNATFLAGS) ts_combfac.adb \
	         -largs get_clock.o get_clocks_per_sec.o

ts_newfac: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_newfac $(INCLULIBS) $(GNATFLAGS) ts_newfac.adb \
	         -largs get_clock.o get_clocks_per_sec.o
 

ts_factor: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_factor $(INCLULIBS) $(GNATFLAGS) ts_factor.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_mulfac:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_mulfac.adb
	gnatbl -o $(BIN)/ts_mulfac ts_mulfac.ali

ts_hypfac:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_hypfac.adb
	gnatbl -o $(BIN)/ts_hypfac ts_hypfac.ali

ts_monfac: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_monfac $(INCLULIBS) $(GNATFLAGS) ts_monfac.adb \
	         -largs get_clock.o get_clocks_per_sec.o

# Test programs in the Components/Decomposition library :

ts_irdeco:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_irdeco.adb
	gnatbl -o $(BIN)/ts_irdeco ts_irdeco.ali

ts_breakup:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_breakup.adb
	gnatbl -o $(BIN)/ts_breakup ts_breakup.ali

ts_cascade: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_cascade $(INCLULIBS) $(GNATFLAGS) \
                    ts_cascade.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_intcas: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_intcas $(INCLULIBS) $(GNATFLAGS) ts_intcas.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_intdia: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_intdia $(INCLULIBS) $(GNATFLAGS) ts_intdia.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_filfac:
	gnatmake -o $(BIN)/ts_filfac $(INCLULIBS) $(GNATFLAGS) ts_filfac.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_reorder:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_reorder.adb
	gnatbl -o $(BIN)/ts_reorder ts_reorder.ali

ts_squeeze:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_squeeze.adb
	gnatbl -o $(BIN)/ts_squeeze ts_squeeze.ali

ts_dimred:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_dimred.adb
	gnatbl -o $(BIN)/ts_dimred ts_dimred.ali

ts_mbthom:
	gnatmake -o $(BIN)/ts_mbthom $(INCLULIBS) ts_mbthom.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_fillit:
	gnatmake -o $(BIN)/ts_fillit $(INCLULIBS) ts_fillit.adb \
               -largs get_clock.o get_clocks_per_sec.o

ts_diahom: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_diahom $(INCLULIBS) $(GNATFLAGS) ts_diahom.adb \
                 -largs get_clock.o get_clocks_per_sec.o

# Test programs in the Components/Solver library :

ts_hypwit:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_hypwit.adb
	gnatbl -o $(BIN)/ts_hypwit ts_hypwit.ali

ts_solver: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_solver $(INCLULIBS) $(GNATFLAGS) ts_solver.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_rdisol: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_solver $(INCLULIBS) $(GNATFLAGS) ts_rdisol.adb \
                 -largs get_clock.o get_clocks_per_sec.o

testnine: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/testnine $(INCLULIBS) $(GNATFLAGS) testnine.adb \
                 -largs get_clock.o get_clocks_per_sec.o

# Test programs in the Differentials library :

ts_prolong:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_prolong.adb
	gnatbl -o $(BIN)/ts_prolong ts_prolong.ali

ts_dae:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_dae.adb
	gnatbl -o $(BIN)/ts_dae ts_dae.ali

# test programs for C to PHC interface :

standard_solutions_container.o:
	gnatmake $(INCLULIBS) $(GNAT95FLAGS) standard_solutions_container.adb

pass_poly:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) print_poly.adb
	gcc -c $(PHCAda)/CtoPHC/pass_poly.c
	gnatbind -n -C print_poly
	gnatlink -C print_poly pass_poly.o -o $(BIN)/pass_poly

root_count:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) pieri_root_count.adb
	gcc -c $(PHCAda)/CtoPHC/root_count.c
	gnatbind -n -C pieri_root_count
	gnatlink -C pieri_root_count root_count.o -o $(BIN)/root_count

factor:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) phc_factor.adb
	gcc -c $(PHCAda)/CtoPHC/factor.c
	gnatbind -n -C phc_factor
	gnatlink -C phc_factor factor.o -o $(BIN)/factor

ts_arrays:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_arrays.adb
	gnatbl -o $(BIN)/ts_arrays ts_arrays.ali

ts_cosup:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_cosup.adb
	gnatbl -o $(BIN)/ts_cosup ts_cosup.ali

ts_cosupoly:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) cosupoly.adb
	gcc -c $(PHCAda)/CtoPHC/ts_cosupoly.c
	gnatbind -n -C cosupoly
	gnatlink -o $(BIN)/ts_cosupoly ts_cosupoly.o -C cosupoly

ts_cosupsys:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) cosupsys.adb
	gcc -c $(PHCAda)/CtoPHC/ts_cosupsys.c
	gnatbind -n -C cosupsys
	gnatlink -o $(BIN)/ts_cosupsys ts_cosupsys.o -C cosupsys

cosupoly_to_c.o:
	gcc -c $(PHCAda)/CtoPHC/cosupoly_to_c.c

cosupsys_to_c.o:
	gcc -c $(PHCAda)/CtoPHC/cosupsys_to_c.c

ts_cosuptoc: cosupoly_to_c.o cosupsys_to_c.o
	gnatmake -o $(BIN)/ts_cosuptoc $(INCLULIBS) $(GNATFLAGS) \
           ts_cosuptoc.adb -largs cosupoly_to_c.o -largs cosupsys_to_c.o

ts_getsys:
	gcc -c $(PHCAda)/CtoPHC/getsys2.c
	gcc -c $(PHCAda)/CtoPHC/ts_getsys.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) getsys1.adb
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) getsys3.adb
	gnatbind -n -C getsys1 getsys3
	gnatlink -C getsys3 ts_getsys.o getsys2.o -o $(BIN)/ts_getsys

ts_phc_sys_rw:
	gcc -c $(PHCAda)/CtoPHC/ts_phc_sys_rw.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) phc_sys_rw.adb
	gnatbind -n -C phc_sys_rw
	gnatlink -C phc_sys_rw ts_phc_sys_rw.o -o $(BIN)/ts_phc_sys_rw

ts_phc_sol_rw:
	gcc -c $(PHCAda)/CtoPHC/ts_phc_sol_rw.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) phc_sol_rw.adb
	gnatbind -n -C phc_sol_rw
	gnatlink -C phc_sol_rw ts_phc_sol_rw.o -o $(BIN)/ts_phc_sol_rw

ts_solcon: standard_solutions_container.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_solcon.adb
	gnatbl -o $(BIN)/ts_solcon ts_solcon.ali

ts_use_solcon: standard_solutions_container.o
	gcc -c $(PHCAda)/CtoPHC/ts_use_solcon.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_solcon.adb
	gnatbind -n -C use_solcon
	gnatlink -C use_solcon ts_use_solcon.o -o $(BIN)/ts_use_solcon

ts_syscon:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_syscon.adb
	gnatbl -o $(BIN)/ts_syscon ts_syscon.ali

ts_use_syscon:
	gcc -c $(PHCAda)/CtoPHC/ts_use_syscon.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_syscon.adb
	gnatbind -n -C use_syscon
	gnatlink -C use_syscon ts_use_syscon.o -o $(BIN)/ts_use_syscon

ts_phc_rw:
	gcc -c $(PHCAda)/CtoPHC/ts_phc_rw.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) phc_rw.adb
	gnatbind -n -C phc_rw
	gnatlink -C phc_rw ts_phc_rw.o -o $(BIN)/ts_phc_rw

ts_cpm:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_cpm.adb
	gnatbl -o $(BIN)/ts_cpm ts_cpm.ali

ts_pieri_count:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) pieri_count.adb
	gcc -c $(PHCAda)/CtoPHC/ts_pieri_count.c
	gnatbind -n -C pieri_count
	gnatlink -o $(BIN)/ts_pieri_count ts_pieri_count.o -C pieri_count

ts_pieri_solver:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) pieri_solver.adb
	gcc -c $(PHCAda)/CtoPHC/ts_pieri_solver.c
	gcc -c $(PHCAda)/CtoPHC/pieri_sols.c
	gnatbind -n -C pieri_solver
	gnatlink -o $(BIN)/ts_pieri_solver ts_pieri_solver.o -C pieri_solver \
                 get_clock.o get_clocks_per_sec.o pieri_sols.o

ts_phc_solver:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) phc_solver.adb
	gcc -c $(PHCAda)/CtoPHC/ts_phc_solver.c
	gcc -c $(PHCAda)/CtoPHC/phc_sols.c
	gnatbind -n -C phc_solver
	gnatlink -o $(BIN)/ts_phc_solver ts_phc_solver.o -C phc_solver \
                 get_clock.o get_clocks_per_sec.o phc_sols.o

ts_csols:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_csols.adb
	gnatbl -o $(BIN)/ts_csols ts_csols.ali

path_tracker.o:
	gcc -c $(PHCAda)/CtoPHC/path_tracker.c

path_sols.o:
	gcc -c $(PHCAda)/CtoPHC/path_sols.c

ts_path_tracker: path_tracker.o path_sols.o get_clock.o get_clocks_per_sec.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) track_paths.adb
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_path_tracker.adb
	gnatmake -o $(BIN)/ts_path_tracker $(INCLULIBS) $(GNATFLAGS) \
                    ts_path_tracker.adb \
                 -largs path_tracker.o track_paths.o path_sols.o \
                        get_clock.o get_clocks_per_sec.o

ts_c2phc:
	gcc -c $(PHCAda)/CtoPHC/ts_c2phc.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) c_to_phcpack.adb
	gnatbind -n -C c_to_phcpack 
	gnatlink -C c_to_phcpack ts_c2phc.o -o $(BIN)/ts_c2phc

ts_pirhom:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_pirhom.adb
	gnatbl -o $(BIN)/ts_pirhom ts_pirhom.ali

ts_use_c2pieri:
	gcc -c $(PHCAda)/CtoPHC/ts_use_c2pieri.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2pieri.adb
	gnatbind -n -C use_c2pieri 
	gnatlink -C use_c2pieri ts_use_c2pieri.o -o $(BIN)/ts_use_c2pieri

# files in feedback :

lib.a:$(PHCAda)/../Feedback/*.c $(PHCAda)/../Feedback/*.h
	$(gcc) -c $(PHCAda)/../Feedback/*.c
	ar ruv lib.a    dc_interpolation.o  dcmplx.o       poly_matrix.o\
       append_dcmatrix.o    dc_inverse.o        pieri_sols.o   poly_smith.o\
       c2ada_dc_matrix.o    dc_matrix.o         poly_dcmplx.o  realization.o\
       c2ada_poly_matrix.o  dc_roots.o          poly_gcd.o     ts_feedback.o\
       poly_hermite.o       append_polymatrix.o timer.o
	ranlib lib.a

ts_feedback: lib.a get_clock.o get_clocks_per_sec.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) pieri_solver.adb
	gnatbind -n -C pieri_solver
	gnatlink -C pieri_solver lib.a \
                 -o $(BIN)/ts_feedback  -lm \
                 get_clock.o get_clocks_per_sec.o

feedback.o:
	$(gcc) -c $(PHCAda)/../Feedback/feedback.c


# Test program to test the C interface to GPU acceleration :

parameter.o:
	$(gpp) -O3 -I$(PHCgpu)/Path/Host \
               -c $(PHCgpu)/Path/Host/parameter.cpp -o parameter.o

lib2path_d.o:
	$(gpp) -O3 -I$(PHCLib) \
                   -I$(PHCgpu)/Path/Complex -I$(PHCgpu)/Path/Poly3 \
                   -I$(PHCgpu)/Path/Host2 \
               -c $(PHCgpu)/Path/Host2/lib2path_d.cpp -o lib2path_d.o

lib2path.o:
	$(gpp) -O3 -I$(PHCLib) -I$(QD_ROOT)/include \
                   -I$(PHCgpu)/Path/Complex -I$(PHCgpu)/Path/Poly3 \
                   -I$(PHCgpu)/Path/Host2 \
               -c $(PHCgpu)/Path/Host2/lib2path.cpp -o lib2path.o

# Test programs for the Tasking :

corecount.o:
	gcc -c $(PHCAda)/Tasking/corecountwindows.c -o corecount.o

ts_corecount: corecount.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_corecount.adb
	gnatbind ts_corecount
	gnatlink ts_corecount corecount.o -o $(BIN)/ts_corecount

ts_tasking:
	gnatmake -o $(BIN)/ts_tasking  $(INCLULIBS) $(GNATFLAGS) ts_tasking.adb

ts_mutex:
	gnatmake -o $(BIN)/ts_mutex  $(INCLULIBS) $(GNATFLAGS) ts_mutex.adb

ts_jobs:
	gnatmake -o $(BIN)/ts_jobs $(INCLULIBS) $(GNATFLAGS) ts_jobs.adb

ts_mtsols:
	gnatmake -o $(BIN)/ts_mtsols $(INCLULIBS) $(GNATFLAGS) ts_mtsols.adb

ts_mtcont: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_mtcont $(INCLULIBS) $(GNATFLAGS) ts_mtcont.adb

ts_mtstref:
	gnatmake -o $(BIN)/ts_mtstref $(INCLULIBS) $(GNATFLAGS) ts_mtstref.adb

ts_mtsharp:
	gnatmake -o $(BIN)/ts_mtsharp $(INCLULIBS) $(GNATFLAGS) ts_mtsharp.adb

ts_mtadcnv:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_mtadcnv.adb \
              -o $(BIN)/ts_mtadcnv

ts_mtserlin:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_mtserlin.adb \
              -o $(BIN)/ts_mtserlin

ts_mtnewton:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_mtnewton.adb \
              -o $(BIN)/ts_mtnewton

# Test programs for the Main interactive drivers :

ts_drivroco:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_drivroco.adb
	gnatbl -o $(BIN)/ts_drivroco ts_drivroco.ali

use_phc:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_phc.adb
	gnatbl -o $(BIN)/use_phc use_phc.ali

# Test programs for the Library Lib :

phcpack.o:
	gcc -c $(PHCLib)/phcpack.c

use_c2phc.o:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb

lib_read: get_clock.o get_clocks_per_sec.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/lib_read.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o lib_read.o \
                    get_clock.o get_clocks_per_sec.o \
                 -o ../bin/lib_read -lm

lib_syscon: get_clock.o get_clocks_per_sec.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/lib_syscon.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc syscon.o lib_syscon.o \
                    get_clock.o get_clocks_per_sec.o \
                 -o ../bin/lib_syscon -lm

lib_newton: get_clock.o get_clocks_per_sec.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/lib_newton.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o solcon.o lib_newton.o \
                    get_clock.o get_clocks_per_sec.o \
                 -o ../bin/lib_newton -lm

lib_solcon: get_clock.o get_clocks_per_sec.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/lib_solcon.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc solcon.o lib_solcon.o \
                    get_clock.o get_clocks_per_sec.o \
                 -o ../bin/lib_solcon -lm

lib_celcon: get_clock.o get_clocks_per_sec.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	$(gcc) -c $(PHCLib)/phcpack.c
	$(gcc) -c $(PHCLib)/syscon.c
	$(gcc) -c $(PHCLib)/solcon.c
	$(gcc) -c $(PHCLib)/celcon.c
	$(gcc) -c $(PHCLib)/intcelcon.c
	$(gcc) -c $(PHCLib)/lib_celcon.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o solcon.o celcon.o \
                    intcelcon.o lib_celcon.o \
                    get_clock.o get_clocks_per_sec.o \
                 -o ../bin/lib_celcon -lm

lib_poco:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/lib_poco.c
	gnatbind -n -C use_c2phc
	gnatlink -C use_c2phc phcpack.o lib_poco.o -o ../bin/lib_poco

lib_factor:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/lib_factor.c
	gnatbind -n -C use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o lib_factor.o \
                 -o ../bin/lib_factor

phc_solve: get_clock.o get_clocks_per_sec.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/phc_solve.c
	gnatbind -n -C use_c2phc
	gnatlink -C use_c2phc syscon.o solcon.o phcpack.o phc_solve.o \
                    get_clock.o get_clocks_per_sec.o -o ../bin/phc_solve

phcpy2c.so:
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/phcpack.c
	$(MINGCC) -c -I$(PYTHON) -I$(PYTHON)/include $(PHCLib)/phcpy2c.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gnatbind -n -C use_c2phc
	gnatlink -shared -C use_c2phc syscon.o solcon.o phcpack.o phcpy2c.o \
	                    get_clock.o get_clocks_per_sec.o \
                 -o ../Python/phcpy2c.dll

# cleaning up the object files :

clean:
	del  *.o *.ali lib.a
