# This makefile is for the command line version
# of the Microsoft Visual Studio Compiler on Windows 10.
# The option '-O3' is unknown and replaced by '-O2'.

# location for the C code of the QD library
QDsrc=../../Ada/Math_Lib/QD

# location of the command line Microsoft Visual Studio Compiler
CL="C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\bin\Hostx64\x64"

# include path for the Microsoft Visual Studio Compiler
includepath="C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\include"

# include path for the Windows Kit
winkitucrt="C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt"

# libaries of the Microsoft Visual Studio compiler
libdirvs="C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\lib\x64"

# libraries of the Windows Kits
libdirkitum="C:\Program Files (x86)\Windows Kits\10\Lib\10.0.18362.0\um\x64"
libdirkitucrt="C:\Program Files (x86)\Windows Kits\10\Lib\10.0.18362.0\ucrt\x64"

# include files of the CUDA SDK
CUDASDK="C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2"
# library folder of the CUDA SDK
CUDALIB="C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\lib\x64"

dbl_norm_kernels.obj:
	@-echo ">>> compiling vector norm kernels for doubles ..."
	nvcc -ccbin=$(CL) -c dbl_norm_kernels.cu -o dbl_norm_kernels.obj

dbl2_norm_kernels.obj:
	@-echo ">>> compiling vector norm kernels for doubles ..."
	nvcc -ccbin=$(CL) -c dbl2_norm_kernels.cu -o dbl2_norm_kernels.obj

cmplx_norm_kernels.obj:
	@-echo ">>> compiling vector norm kernels for doubles ..."
	nvcc -ccbin=$(CL) -c cmplx_norm_kernels.cu -o cmplx_norm_kernels.obj

double_double.obj:
	@-echo ">>> compiling double_double ..."
	$(CL)\cl /c -I$(QDsrc) -I$(winkitucrt) -I$(includepath) -O2 \
                      $(QDsrc)/double_double.cpp /Fo: double_double.obj

double_double_functions.obj:
	@-echo ">>> compiling double_double_functions ..."
	$(CL)\cl /c -I$(winkitucrt) -I$(includepath) -O2 \
             double_double_functions.cpp /Fo: double_double_functions.obj

test_double_doubles: double_double.obj double_double_functions.obj
	@-echo ">>> compiling test_double_doubles ..."
	$(CL)\cl /c -I$(QDsrc) -I$(winkitucrt) -I$(includepath) -O2 \
                    test_double_doubles.cpp /Fo: test_double_doubles.obj /EHsc
	@-echo ">>> linking test_double_doubles ..."
	nvcc -ccbin=$(CL) -o test_double_doubles.exe double_double.obj \
             double_double_functions.obj test_double_doubles.obj

dbl_norm_host.obj:
	@-echo ">>> compiling dbl_norm_host ..."
	$(CL)\cl /c dbl_norm_host.cpp -I$(winkitucrt) -I$(includepath) -O2 \
                 /Fo: dbl_norm_host.obj

dbl2_norm_host.obj:
	@-echo ">>> compiling dbl2_norm_host ..."
	$(CL)\cl /c dbl2_norm_host.cpp -I$(winkitucrt) -I$(includepath) -O2 \
                 /Fo: dbl2_norm_host.obj

random_numbers.obj:
	@-echo ">>> compiling random numbers ..."
	$(CL)\cl /c random_numbers.cpp -I$(winkitucrt) -I$(includepath) -O2 \
                 /Fo: random_numbers.obj

random_vectors.obj:
	@-echo ">>> compiling random double precision vectors ..."
	$(CL)\cl /c random_vectors.cpp -I$(winkitucrt) -I$(includepath) -O2 \
                 /Fo: random_vectors.obj

random2_vectors.obj:
	@-echo ">>> compiling random double double vectors ..."
	$(CL)\cl /c random2_vectors.cpp \
                 -I$(QDsrc) -I$(winkitucrt) -I$(includepath) -O2 \
                 /Fo: random2_vectors.obj

parse_run_arguments.obj:
	@-echo ">>> compiling parse_run_arguments ..."
	$(CL)\cl /c parse_run_arguments.cpp -I$(winkitucrt) -I$(includepath) \
                 /Fo: parse_run_arguments.obj

cmplx_norm_host.obj:
	@-echo ">>> compiling cmplx_norm_host ..."
	$(CL)\cl /c cmplx_norm_host.cpp -I$(winkitucrt) -I$(includepath) -O2 \
                 /Fo: cmplx_norm_host.obj

cmplx2_norm_host.obj:
	@-echo ">>> compiling cmplx2_norm_host ..."
	$(CL)\cl /c cmplx2_norm_host.cpp -I$(winkitucrt) -I$(includepath) -O2 \
                 /Fo: cmplx2_norm_host.obj

run_dbl_norm.obj:
	@-echo ">>> compiling run_dbl_norm ..."
	$(CL)\cl /c run_dbl_norm.cpp -I$(winkitucrt) -I$(includepath) \
                 /I$(CUDASDK)/include -O2 /Fo: run_dbl_norm.obj /EHsc

run_dbl2_norm.obj:
	@-echo ">>> compiling run_dbl2_norm ..."
	$(CL)\cl /c run_dbl2_norm.cpp -I$(winkitucrt) -I$(includepath) \
                 /I$(CUDASDK)/include -O2 /Fo: run_dbl2_norm.obj /EHsc

run_cmplx_norm.obj:
	@-echo ">>> compiling run_cmplx_norm ..."
	$(CL)\cl /c run_cmplx_norm.cpp -I$(winkitucrt) -I$(includepath) \
                 /I$(CUDASDK)/include -O2 /Fo: run_cmplx_norm.obj /EHsc

test_dbl_norm.obj:
	@-echo ">>> compiling test_dbl_norm ..."
	$(CL)\cl /c test_dbl_norm.cpp -I$(winkitucrt) -I$(includepath) \
                 /I$(CUDASDK)/include -02 /Fo: test_dbl_norm.obj /EHsc

test_dbl2_norm.obj:
	@-echo ">>> compiling test_dbl2_norm ..."
	$(CL)\cl /c -O2 test_dbl2_norm.cpp -I$(winkitucrt) -I$(includepath) \
                 /I$(CUDASDK)/include -I$(QDsrc) /Fo: test_dbl2_norm.obj /EHsc

test_cmplx_norm.obj:
	@-echo ">>> compiling test_cmplx_norm ..."
	$(CL)\cl /c test_cmplx_norm.cpp -I$(winkitucrt) -I$(includepath) \
                 /I$(CUDASDK)/include -O2 /Fo: test_cmplx_norm.obj /EHsc

test_cmplx2_norm.obj:
	@-echo ">>> compiling test_cmplx2_norm ..."
	$(CL)\cl /c -O2 test_cmplx2_norm.cpp -I$(winkitucrt) -I$(includepath) \
                 /I$(CUDASDK)/include -I$(QDsrc) /Fo: test_cmplx2_norm.obj /EHsc

run_dbl_norm: dbl_norm_kernels.obj dbl_norm_host.obj \
	      random_numbers.obj random_vectors.obj \
              parse_run_arguments.obj run_dbl_norm.obj
	@-echo ">>> linking ..."
	nvcc -ccbin=$(CL) -o run_dbl_norm.exe dbl_norm_kernels.obj \
             dbl_norm_host.obj random_numbers.obj random_vectors.obj \
             parse_run_arguments.obj run_dbl_norm.obj

run_dbl2_norm: double_double_functions.obj double_double.obj \
               dbl2_norm_kernels.obj dbl2_norm_host.obj \
               random_numbers.obj random2_vectors.obj \
               parse_run_arguments.obj run_dbl2_norm.obj
	@-echo ">>> linking ..."
	nvcc -ccbin=$(CL) -o run_dbl2_norm.exe dbl2_norm_kernels.obj \
             dbl2_norm_host.obj random_numbers.obj random2_vectors.obj \
             parse_run_arguments.obj double_double.obj \
             double_double_functions.obj run_dbl2_norm.obj

run_cmplx_norm: cmplx_norm_kernels.obj cmplx_norm_host.obj \
                random_numbers.obj random_vectors.obj \
                parse_run_arguments.obj run_cmplx_norm.obj
	@-echo ">>> linking ..."
	nvcc -ccbin=$(CL) -o run_cmplx_norm.exe cmplx_norm_kernels.obj \
             cmplx_norm_host.obj random_numbers.obj random_vectors.obj \
             parse_run_arguments.obj run_cmplx_norm.obj

test_dbl_norm: dbl_norm_kernels.obj dbl_norm_host.obj \
               random_numbers.obj random_vectors.obj test_dbl_norm.obj
	@-echo ">>> linking ..."
	nvcc -ccbin=$(CL) -o test_dbl_norm.exe dbl_norm_kernels.obj \
             dbl_norm_host.obj random_numbers.obj random_vectors.obj \
             test_dbl_norm.obj

test_dbl2_norm: double_double.obj double_double_functions.obj \
                dbl2_norm_host.obj random_numbers.obj random2_vectors.obj \
                dbl2_norm_kernels.obj test_dbl2_norm.obj
	@-echo ">>> linking ..."
	nvcc -ccbin=$(CL) -o test_dbl2_norm.exe dbl2_norm_host.obj \
             double_double.obj double_double_functions.obj \
	     random_numbers.obj random2_vectors.obj dbl2_norm_kernels.obj \
             test_dbl2_norm.obj

test_cmplx_norm: cmplx_norm_kernels.obj cmplx_norm_host.obj \
                 random_numbers.obj random_vectors.obj test_cmplx_norm.obj
	@-echo ">>> linking ..."
	nvcc -ccbin=$(CL) -o test_cmplx_norm.exe cmplx_norm_kernels.obj \
             cmplx_norm_host.obj random_numbers.obj random_vectors.obj \
             test_cmplx_norm.obj

test_cmplx2_norm: cmplx2_norm_host.obj random_numbers.obj random2_vectors.obj \
                  double_double.obj double_double_functions.obj \
                  test_cmplx2_norm.obj
	@-echo ">>> linking ..."
	nvcc -ccbin=$(CL) -o test_cmplx2_norm.exe cmplx2_norm_host.obj \
             double_double.obj double_double_functions.obj \
             random_numbers.obj random2_vectors.obj test_cmplx2_norm.obj

clean:
	del *exe *obj *exp *lib *~
