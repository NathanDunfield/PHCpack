Mon 24 Feb 2020 : for circuits coming from overdetermined systems, an
  extra parameter is needed to represent a system, updated 
  generic_speelpenning_convolutions and system_convolution_circuits.adb.

Sun 23 Feb 2020 : fixed the documentation in newton_convolutions.ads.

Wed 19 Feb 2020 : in shift_convolution_circuits.adb, applied the double,
  double double, and quad double versions of the binomial coefficients.

Tue 18 Feb 2020 : modifications in generic_speelpenning_convolutions.adb,
  newton_convolutions.adb, and ts_fabry.adb for nonsquare problems.

Mon 17 Feb 2020 : added copy procedures to generic_speelpenning_convolutions.

Sun 16 Feb 2020 : new test procedure ts_shiftcnv to develop a thread safe
  version of shifting the coefficients of a power series.
  New package shift_convolution_circuits, tested by ts_shiftcnv.

Wed 12 Feb 2020 : to generic_speelpenning_convolutions, added two speel
  functions to evaluate and differentiate efficiently at a product.

Fri 7 Feb 2020 : to system_convolution_circuits, added functions to
  convert systems in quad double precision to double and double doubles,
  as needed for benchmarking on the same randomly generated tests.

Thu 6 Feb 2020 : added simple computation of first derivatives to
  generic_speelpenning_convolutions, applied in new package
  jacobian_convolution_circuits, tested by ts_jacocnv.

Mon 3 Feb 2020 : to hessian_convolution_circuits, added procedures to
  compute the singular values for link to circuits.

Sat 1 Feb 2020 : added to generic_speelpenning_convolutions a function
  to compute the value of the second derivative for a link to a circuit.
  Extended ts_hesscnv with tests on Hessian matrices.
  New package hessian_convolution_circuits with some code of ts_hesscnv.
  Added SVD to hessian_convolution_circuits.

Fri 31 Jan 2020 : completed a first test of the Hessian computation in
  ts_hesscnv.  Extended generic_speelpenning_convolutions with the Diff
  procedures to compute second derivatives, tested by ts_hesscnv.

Thu 30 Jan 2020 : first version of the Diff on a circuit in ts_hesscnv.

Wed 29 Jan 2020 : new procedure ts_hesscnv to develop the code to compute
  the value of the Hessian of a circuit.

Mon 27 Jan 2020 : to Newton_convolutions, added procedures to compute
  the highest index of the coefficient vector of the update that is lower
  than a given tolerance, to measure the convergence of Newton's method.

Sat 25 Jan 2020 : added functions to system_convolution_circuits.
  Shortened the names *Convolution_Circuit* into *Circuit* in
  generic_speelpenning_convolutions, modified system_convolution_circuits,
  random_convolution_circuits, homotopy_convolution_circuits,
  series_polynomial_gradients, ts_speelcnv, ts_fabry, ts_evalcnv.

Thu 23 Jan 2020 : added another eval to generic_speelpenning_convolutions
  to test the Newton homotopy of homotopy_convolution_circuits,
  tested by ts_evalcnv.  To random_convolution_circuits, added procedures
  to generate random Newton homotopies, tested by ts_evalcnv.

Wed 22 Jan 2020 : new Eval function in generic_speelpenning_convolutions,
  tested by the procedure ts_evalcnv.  Added to homotopy_convolution_circuits
  procedures to modify the constant coefficients so a given vector is
  a solution, tested by ts_evalcnv.

Mon 20 Jan 2020 : to newton_convolutions, added input parameter to flag
  the scaling of the coefficient vectors, adjusted ts_fabry.

Mon 13 Jan 2020 : new package homotopy_convolution_circuits to add a
  continuation parameter to convolution circuits, with code taken from
  ts_fabry and from ../../Deformations/ts_sernewcnv.

Sat 11 Jan 2020 : added an extra output parameter to the Newton step
  procedures in newton_convolutions, tested by ts_fabry.
  Added function to newton_convolutions for the max computation.

Fri 10 Jan 2020 : extended newton_convolutions with procedures with QRLS
  and SVD, tested by ts_fabry.

Wed 8 Jan 2020 : new package convergence_radius_estimates to apply the
  ratio theorem of Fabry, with tests in ts_fabry.  New package
  newton_convolutions with code taken from ts_fabry.

Mon 6 Jan 2020 : to generic_speelpenning_convolutions added operations to
  allocate and compute the power table.  Added a system type to the
  generic_speelpenning_convolutions to encapsulate the work space along
  with the convolution circuits and added encapsulated EvalDiff procedures.
  The package Linearized_Series_Coefficients is obsolete as the Delinearize
  is moved into the generic_speelpenning_convolutions; tested by ts_speelcnv.

Sun 5 Jan 2020 : in generic_speelpenning_convolutions turned the representation
  of the evaluated series in linearized form, tested by ts_speelcnv.
  Extracted the Delinearize procedures out of ts_speelcnv into a new
  package Linearized_Series_Coefficients.

Fri 3 Jan 2020 : extracted code from series_polynomial_gradients, which
  modified random_convolution_circuits.adb, ts_speelser, and ts_speelcnv.

Mon 30 Dec 2019 : added functions to evaluation_differentiation_errors
  to compare results computed by the multitasked versions.

Sun 29 Dec 2019 : new package evaluation_differentiation_errors with code
  taken from ts_speelcnv.

Sat 28 Dec 2019 : moved the computation of the exponent maxima from the
  ts_speelser to the generic_speelpenning_convolutions.

Fri 27 Dec 2019 : new package random_convolution_circuits with code taken
  from ts_speelcnv.  New package system_convolution_circuits to define
  circuits from polynomials and systems, tested by ts_speelcnv.
  Added comparison tests to ts_speelcnv for systems given on input.

Thu 26 Dec 2019 : updated exponent_indices and ts_speelser for the changes
  in series_polynomial_grandients.  Reset the work space variables to zero
  in the EvalDiff of generic_speelpenning_convolutions.adb for systems,
  with extra test procedure in ts_speelcnv.  To ts_speelcnv, added
  procedure to compute the errors of the differences between the symbolic
  way and the algorithm differentiation convolution circuits.

Wed 25 Dec 2019 : upgraded series_polynomial_gradients to work with complex
  series instead of dense series, tested by ts_speelcnv.

Tue 24 Dec 2019 : added allocation of vectors of matrices to
  generic_speelpenning_convolutions, called in ts_speelcnv.

Mon 23 Dec 2019 : to series_polynomial_gradients, added functions to turn
  convolution circuits into polynomial systems and to ts_speelcnv,
  added procedures to generate random convolution circuits.

Sun 22 Dec 2019 : added the convolution circuit as a data type to
  generic_speelpenning_convolutions, with added constant declarations
  in ts_speelcnv.  Added the assignments to the series of matrices
  in generic_speelpenning_convolutions and adjusted the instantiations,
  in {standard,dobldobl,quaddobl}_speelpenning_convolutions.

Sat 21 Dec 2019 : added procedures to generic_speelpenning_convolutions
  to multiply the common factor and the multiplier exponent.
  Fixed error with the multiplication with the multiplier exponent.
  Fixed the case with two participating variables in a monomial.

Fri 20 Dec 2019 : added the computation of the errors to ts_speelcnv.
  Extended the exponent_indices with function to compute the factor index,
  tested by ts_speelcnv.  Updated series_polynomial_gradients for general
  exponents, extended exponent_indices with a power table, used in
  generic_speelpenning_convolutions, and tested in ts_speelcnv.

Thu 19 Dec 2019 : new package series_polynomial_gradients, with code
  from ts_speelser, for use in ts_speelcnv.  Extended the package
  generic_speelpenning_convolutions with procedures to evaluate and
  differentiate a sum of products, tested by ts_speelcnv.
  Extended series_polynomial_gradients and generic_speelpenning_convolutions
  with operations for general coefficients, tested by ts_speelcnv.

Wed 18 Dec 2019 : ts_speelser computes all derivatives of a product,
  with convolutions for the coefficients of power series.
  New package generic_speelpenning_convolutions, instantiated with
  double, double double, and quad double coefficients in
  {standard,dobldobl,quaddobl}_speelpenning_convolutions.ads,
  tested by ts_speelser.  Extended generic_speelpenning_convolutions
  for indexed products, tested by ts_speelser.  New package exponent_indices,
  with code extracted from ts_speelser, new ts_speelcnv.

Tue 17 Dec 2019 : new test procedure ts_speelser, to develop the reverse mode
  of algorithmic differentiation on power series.
  Added the computation of the product to ts_speelser.adb.

Mon 22 Jun 2015 : new packages multprec_jacobian_evaluations and
  multprec_jacobian_circuits, tested by ts_gradcirc.

Sun 21 Jun 2015 : updates in standard_jacobian_evaluations and ts_speelsys.
  Upgraded standard_jacobian_circuits with EvalDiff procedure,
  tested by ts_gradcirc.  Versions for double doubles and quad doubles 
  in packages {dobldobl,quaddobl}_jacobian_circuits, tested by ts_gradcirc.

Sat 20 Jun 2015 : new package standard_jacobian_circuits to contain the
  data structures to evaluate and differentiate systems of polynomials,
  tested by ts_gradcirc.

Fri 19 Jun 2015 : in standard_gradient_evaluations, added functions and
  procedures in case there are no common factors.
  New package standard_gradient_circuits encapsulates evaluation
  and differentiation, tested by ts_gradcirc.
  Extended {dobldobl,quaddobl,multprec}_gradient_evaluations also with
  routines for when there are no common factors.
  New packages {dobldobl,quaddobl,multprec}_gradient_circuits,
  tested by ts_gradcirc.

Thu 18 Jun 2015 : factored split_common_factors out of the different
  gradient_evaluations packages into coefficient_supported_polynomials,
  which also changed the *jacobian_evaluations.adb files.
  Provided an extended version of split_common_factors.

Wed 17 Jun 2015 : new directory populated with code from ../Functions.
