Algorithmic differentiation and arithmetic circuits in PHCv2.4.75

This directory was created new in v2.3.98, with code that had been building
up in the directory Functions.  In Functions, polynomials are evaluated by
means of a nested Horner scheme.  For scaling to larger problems and for
massively parallel implementations (GPU), new evaluation and differentation
algorithms were developed jointly with Genady Yoffe.
With the reverse mode of algorithmic differentiation the value of a product
of variables -- the so-called Speelpenning example -- can be computed along
with its gradient at a cost that is linear in the number of variables.

Since the different ways to evaluate polynomials use different orders of
computation, the results may differ when mixed-precision arithmetic is used.

-------------------------------------------------------------------------------
file name                          : short description
-------------------------------------------------------------------------------
standard_speelpenning_products     : evaluate and differentiate a product
dobldobl_speelpenning_products     : Speelpenning product with double doubles
quaddobl_speelpenning_products     : Speelpenning product with quad doubles
multprec_speelpenning_products     : Speelpenning product with multprecision
standard_monomial_evaluations      : evaluations of monomials
dobldobl_monomial_evaluations      : monomial evaluations with double doubles
quaddobl_monomial_evaluations      : monomial evaluations with quad doubles
multprec_monomial_evaluations      : monomial evaluations with multiprecision
standard_gradient_evaluations      : evaluation and gradient computation
dobldobl_gradient_evaluations      : double double gradient computation
quaddobl_gradient_evaluations      : quad double gradient computation
multprec_gradient_evaluations      : multiprecision gradient computation
coefficient_supported_polynomials  : support vector polynomial representations
standard_jacobian_evaluations      : evaluating and differentiation of systems
dobldobl_jacobian_evaluations      : double double eval & diff of systems
quaddobl_jacobian_evaluations      : quad double eval & diff of systems
multprec_jacobian_evaluations      : multiprecision eval & diff of systems
-------------------------------------------------------------------------------
random_conditioned_evaluations     : generate problems with given condition
varbprec_polynomial_evaluations    : evaluate polynomials at various precisions
varbprec_gradient_evaluations      : evaluate gradient a various precision
cyclic_roots_system                : defines the cyclic n-roots benchmark
ts_vmpeval                         : tests variable precision evaluation
ts_vmpdiff                         : tests variable precision differentiation
-------------------------------------------------------------------------------
ts_cffsup                          : test on coefficient supported polynomials
ts_speel                           : development of Speelpenning product
ts_speelsys                        : test on eval and diff of systems
ts_cycfun                          : on the cyclic n-roots problems
-------------------------------------------------------------------------------
standard_gradient_circuits         : eval & diff circuits for polynomials
dobldobl_gradient_circuits         : gradient circuits for double doubles
quaddobl_gradient_circuits         : gradient circuits for quad doubles
multprec_gradient_circuits         : gradient circuits for multiprecision
standard_jacobian_circuits         : eval & diff circuits for systems
dobldobl_jacobian_circuits         : Jacobian circuits for double doubles
quaddobl_jacobian_circuits         : Jacobian circuits for quad doubles
multprec_jacobian_circuits         : Jacobian circuits for multprec numbers
ts_gradcirc                        : test on eval & diff circuits
-------------------------------------------------------------------------------
generic_speelpenning_convolutions  : gradient evaluation of product
exponent_indices                   : extracting indices of exponent vectors
standard_speelpenning_convolutions : Speelpenning with doubles
dobldobl_speelpenning_convolutions : Speelpenning with double doubles
quaddobl_speelpenning_convolutions : Speelpenning with quad doubles
series_polynomial_gradients        : collects test utilities
random_convolution_circuits        : generation of random circuits for testing
system_convolution_circuits        : make circuits from polynomials and systems
evaluation_differentiation_errors  : functions for differences of computations
ts_speelser                        : test reverse mode on power series
ts_speelcnv                        : convolutions for series polynomials
newton_convolutions                : Newton with convolution circuits
convergence_radius_estimates       : applies ratio theorem of Fabry
ts_fabry                           : test on the Fabry ratio theorem
-------------------------------------------------------------------------------
