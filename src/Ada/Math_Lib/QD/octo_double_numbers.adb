with Double_Double_Basics;
with Fast_Double_Renormalizations;       use Fast_Double_Renormalizations;

package body Octo_Double_Numbers is

-- CONSTRUCTORS :

  function create ( x : double_float ) return octo_double is

    res : octo_double;

  begin
    res.hihihi := x;
    res.lohihi := 0.0;
    res.hilohi := 0.0;
    res.lolohi := 0.0;
    res.hihilo := 0.0;
    res.lohilo := 0.0;
    res.hilolo := 0.0;
    res.lololo := 0.0;
    return res;
  end Create;

  function create ( hihihi,lohihi,hilohi,lolohi : double_float;
                    hihilo,lohilo,hilolo,lololo : double_float )
                  return octo_double is

    res : octo_double;

  begin
    res.hihihi := hihihi;
    res.lohihi := lohihi;
    res.hilohi := hilohi;
    res.lolohi := lolohi;
    res.hihilo := hihilo;
    res.lohilo := lohilo;
    res.hilolo := hilolo;
    res.lololo := lololo;
    return res;
  end create;

-- SELECTORS :

  function hihihi_part ( x : octo_double ) return double_float is
  begin
    return x.hihihi;
  end hihihi_part;

  function lohihi_part ( x : octo_double ) return double_float is
  begin
    return x.lohihi;
  end lohihi_part;

  function hilohi_part ( x : octo_double ) return double_float is
  begin
    return x.hilohi;
  end hilohi_part;

  function lolohi_part ( x : octo_double ) return double_float is
  begin
    return x.lolohi;
  end lolohi_part;

  function hihilo_part ( x : octo_double ) return double_float is
  begin
    return x.hihilo;
  end hihilo_part;

  function lohilo_part ( x : octo_double ) return double_float is
  begin
    return x.lohilo;
  end lohilo_part;

  function hilolo_part ( x : octo_double ) return double_float is
  begin
    return x.hilolo;
  end hilolo_part;

  function lololo_part ( x : octo_double ) return double_float is
  begin
    return x.lololo;
  end lololo_part;

-- ARITHMETICAL OPERATIONS :

  function "+" ( x,y : octo_double ) return octo_double is

  -- ALGORITHM : baileyAdd_fast<8,8,8> generated by CAMPARY.

    res : octo_double;
    f0,f1,f2,f3,f4,f5,f6,f7,f8,e : double_float;

  begin
    f8 := 0.0;
    Double_Double_Basics.two_sum(x.lololo,y.lololo,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(x.hilolo,y.hilolo,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(x.lohilo,y.lohilo,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(x.hihilo,y.hihilo,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(x.lolohi,y.lolohi,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(x.hilohi,y.hilohi,f2,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(x.lohihi,y.lohihi,f1,e);
    Double_Double_Basics.two_sum(f2,e,f2,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(x.hihihi,y.hihihi,f0,e);
    Double_Double_Basics.two_sum(f1,e,f1,e);
    Double_Double_Basics.two_sum(f2,e,f2,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    fast_renorm(f0,f1,f2,f3,f4,f5,f6,f7,f8,
                res.hihihi,res.lohihi,res.hilohi,res.lolohi,
                res.hihilo,res.lohilo,res.hilolo,res.lololo);
    return res;
  end "+";

  function "+" ( x : octo_double; y : double_float ) return octo_double is

    res : octo_double;

  begin
    renorm_add1(x.hihihi,x.lohihi,x.hilohi,x.lolohi,
                x.hihilo,x.lohilo,x.hilolo,x.lololo,y,
                res.hihihi,res.lohihi,res.hilohi,res.lolohi,
                res.hihilo,res.lohilo,res.hilolo,res.lololo);
    return res;
  end "+";

  function "+" ( x : double_float; y : octo_double ) return octo_double is

    res : constant octo_double := y + x;

  begin
    return res;
  end "+";

  function "-" ( x : octo_double ) return octo_double is

    res : octo_double;

  begin
    res.hihihi := -x.hihihi;
    res.lohihi := -x.lohihi;
    res.hilohi := -x.hilohi;
    res.lolohi := -x.lolohi;
    res.hihilo := -x.hihilo;
    res.lohilo := -x.lohilo;
    res.hilolo := -x.hilolo;
    res.lololo := -x.lololo;
    return res;
  end "-";

  function "-" ( x,y : octo_double ) return octo_double is

    mny : constant octo_double := -y;
    res : constant octo_double := x + mny;

  begin
    return res;
  end "-";

  function "*" ( x,y : octo_double ) return octo_double is

  -- ALGORITHM : baileyMul_fast<8,8,8> generated by CAMPARY.

    res : octo_double;
    f0,f1,f2,f3,f4,f5,f6,f7,f8,p,e : double_float;

  begin
    f8 := x.lohihi*y.lololo;
    f8 := f8 + x.hilohi*y.hilolo;
    f8 := f8 + x.lolohi*y.lohilo;
    f8 := f8 + x.hihilo*y.hihilo;
    f8 := f8 + x.lohilo*y.lolohi;
    f8 := f8 + x.hilolo*y.hilohi;
    f8 := f8 + x.lololo*y.lohihi;
    Double_Double_Basics.two_prod(x.hihihi,y.lololo,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lohihi,y.hilolo,p,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f7,p,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hilohi,y.lohilo,p,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f7,p,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lolohi,y.hihilo,p,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f7,p,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hihilo,y.lolohi,p,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f7,p,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lohilo,y.hilohi,p,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f7,p,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hilolo, y.lohihi,p,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f7,p,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lololo,y.hihihi,p,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f7,p,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hihihi,y.hilolo,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lohihi,y.lohilo,p,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f6,p,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hilohi,y.hihilo,p,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f6,p,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lolohi,y.lolohi,p,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f6,p,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hihilo,y.hilohi,p,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f6,p,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lohilo,y.lohihi,p,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f6,p,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hilolo,y.hihihi,p,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f6,p,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hihihi,y.lohilo,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lohihi,y.hihilo,p,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f5,p,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hilohi,y.lolohi,p,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f5,p,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lolohi,y.hilohi,p,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f5,p,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hihilo,y.lohihi,p,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f5,p,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lohilo,y.hihihi,p,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f5,p,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hihihi,y.hihilo,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lohihi,y.lolohi,p,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f4,p,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hilohi,y.hilohi,p,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f4,p,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lolohi,y.lohihi,p,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f4,p,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hihilo,y.hihihi,p,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f4,p,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hihihi,y.lolohi,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lohihi,y.hilohi,p,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f3,p,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hilohi,y.lohihi,p,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f3,p,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lolohi,y.hihihi,p,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f3,p,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hihihi,y.hilohi,f2,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lohihi,y.lohihi,p,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f2,p,f2,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hilohi,y.hihihi,p,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f2,p,f2,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hihihi,y.lohihi,f1,e);
    Double_Double_Basics.two_sum(f2,e,f2,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lohihi,y.hihihi,p,e);
    Double_Double_Basics.two_sum(f2,e,f2,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_sum(f1,p,f1,e);
    Double_Double_Basics.two_sum(f2,e,f2,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hihihi,y.hihihi,f0,e);
    Double_Double_Basics.two_sum(f1,e,f1,e);
    Double_Double_Basics.two_sum(f2,e,f2,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    fast_renorm(f0,f1,f2,f3,f4,f5,f6,f7,f8,
                res.hihihi,res.lohihi,res.hilohi,res.lolohi,
                res.hihilo,res.lohilo,res.hilolo,res.lololo);
    return res;
  end "*";

  function "*" ( x : octo_double; y : double_float ) return octo_double is

  -- ALGORITHM : baileyMul_fast<8,1,8> generated by CAMPARY.

    res : octo_double;
    f0,f1,f2,f3,f4,f5,f6,f7,f8,e : double_float;

  begin
    f8 := 0.0;
    Double_Double_Basics.two_prod(x.lololo,y,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hilolo,y,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lohilo,y,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hihilo,y,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lolohi,y,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hilohi,y,f2,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.lohihi,y,f1,e);
    Double_Double_Basics.two_sum(f2,e,f2,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    Double_Double_Basics.two_prod(x.hihihi,y,f0,e);
    Double_Double_Basics.two_sum(f1,e,f1,e);
    Double_Double_Basics.two_sum(f2,e,f2,e);
    Double_Double_Basics.two_sum(f3,e,f3,e);
    Double_Double_Basics.two_sum(f4,e,f4,e);
    Double_Double_Basics.two_sum(f5,e,f5,e);
    Double_Double_Basics.two_sum(f6,e,f6,e);
    Double_Double_Basics.two_sum(f7,e,f7,e);
    f8 := f8 + e;
    fast_renorm(f0,f1,f2,f3,f4,f5,f6,f7,f8,
                res.hihihi,res.lohihi,res.hilohi,res.lolohi,
                res.hihilo,res.lohilo,res.hilolo,res.lololo);
    return res;
  end "*";

  function "*" ( x : double_float; y : octo_double ) return octo_double is

    res : constant octo_double := y*x;

  begin
    return res;
  end "*";

  function "/" ( x,y : octo_double ) return octo_double is

    res,acc : octo_double;
    q0,q1,q2,q3,q4,q5,q6,q7,q8 : double_float;

  begin
    q0 := x.hihihi/y.hihihi;   acc := q0*y; res := x - acc;
    q1 := res.hihihi/y.hihihi; acc := q1*y; res := res - acc;
    q2 := res.hihihi/y.hihihi; acc := q2*y; res := res - acc;
    q3 := res.hihihi/y.hihihi; acc := q3*y; res := res - acc;
    q4 := res.hihihi/y.hihihi; acc := q4*y; res := res - acc;
    q5 := res.hihihi/y.hihihi; acc := q5*y; res := res - acc;
    q6 := res.hihihi/y.hihihi; acc := q6*y; res := res - acc;
    q7 := res.hihihi/y.hihihi; acc := q7*y; res := res - acc;
    q8 := res.hihihi/y.hihihi;
    fast_renorm(q0,q1,q2,q3,q4,q5,q6,q7,q8,
                res.hihihi,res.lohihi,res.hilohi,res.lolohi,
                res.hihilo,res.lohilo,res.hilolo,res.lololo);
    return res;
  end "/";

  function "/" ( x : octo_double; y : double_float ) return octo_double is

    ody : constant octo_double := create(y);
    res : constant octo_double := x/ody;

  begin
    return res;
  end "/";

  function "/" ( x : double_float; y : octo_double ) return octo_double is

    odx : constant octo_double := create(x);
    res : constant octo_double := odx/y;

  begin
    return res;
  end "/";

end Octo_Double_Numbers;
