with Standard_Floating_Numbers;          use Standard_Floating_Numbers;

package Fast_Double_Renormalizations is

-- DESCRIPTION :
--   The fast renormalization procedures are defined 
--   with generated code from the CAMPARY library, posted 01.06.17,
--   and based on QD-2.3.9.

  procedure fast_renorm
              ( x0,x1,x2,x3 : in double_float;
                r0,r1,r2 : out double_float );

  -- DESCRIPTION :
  --   The definition is based on the fast_renorm2L<4,3>,
  --   from code of the specRenorm.h, generated by the CAMPARY library,
  --   in an unrolled form (Valentina Popescu, Mioara Joldes), with
  --   double double basics of QD-2.3.9 (Y. Hida, X.S. Li, and D.H. Bialey).

  -- ON ENTRY :
  --   x0       most significant word;
  --   x1       second most significant word;
  --   x2       third most significant word;
  --   x3       least significant word.

  -- ON RETURN :
  --   r0       highest part of a triple double number;
  --   r1       middle part of a triple double number;
  --   r2       lowest part of a triple double number.

  procedure renorm_add1
              ( x0,x1,x2 : in double_float; y : in double_float;
                r0,r1,r2 : out double_float );

  -- DESCRIPTION :
  --   The definition is based on renorm2L_4Add1<3,3>
  --   from code of the specRenorm.h, generated by the CAMPARY library,
  --   in an unrolled form (Valentina Popescu, Mioara Joldes), with
  --   double double basics of QD-2.3.9 (Y. Hida, X.S. Li, and D.H. Bialey).

  -- ON ENTRY :
  --   x0       most significant word of a triple number x;
  --   x1       second most significant word of a triple number x;
  --   x2       third most significant word of a triple number x;
  --   y        double to be added to x.

  -- ON RETURN :
  --   r0       most significant word of x + y;
  --   r1       second most significant word of x + y;
  --   r2       least significant word of x + y.

  procedure renorm8
              ( f0,f1,f2,f3,f4,f5,f6,f7,f8 : in double_float;
                pr : in out double_float;
                r0,r1,r2,r3,r4,r5,r6,r7 : out double_float );

  -- DESCRIPTION :
  --   Definitions common to fast_renorm2L<9,8> and renorm2L_4Add1<8,8>
  --   from code of the specRenorm.h, generated by the CAMPARY library,
  --   in an unrolled form (Valentina Popescu, Mioara Joldes), with
  --   double double basics of QD-2.3.9 (Y. Hida, X.S. Li, and D.H. Bialey).

  -- ON ENTRY :
  --   x0       most significant word;
  --   x1       second most significant word;
  --   x2       third most significant word;
  --   x3       fourth most significant word;
  --   x4       fifth most significant word;
  --   x5       sixth most significant word;
  --   x6       seventh most significant word;
  --   x7       eighth most significant word;
  --   x8       least significant word;
  --   pr       computed by the start of the renormalization.

  -- ON RETURN :
  --   pr       updated value by renormalization;
  --   r0       highest part of an octo double number;
  --   r1       second highest part of an octo double number;
  --   r2       third highest part of an octo double number.
  --   r3       fourth highest part of an octo double number;
  --   r4       fourth lowest part of an octo double number;
  --   r5       third lowest part of an octo double number;
  --   r6       second lowest part of an octo double number;
  --   r7       lowest part of an octo double number.

  procedure fast_renorm
              ( x0,x1,x2,x3,x4,x5,x6,x7,x8 : in double_float;
                r0,r1,r2,r3,r4,r5,r6,r7 : out double_float );

  -- DESCRIPTION :
  --   The definition is based on the fast_renorm2L<9,8>,
  --   from code of the specRenorm.h, generated by the CAMPARY library,
  --   in an unrolled form (Valentina Popescu, Mioara Joldes), with
  --   double double basics of QD-2.3.9 (Y. Hida, X.S. Li, and D.H. Bialey).

  -- ON ENTRY :
  --   x0       most significant word;
  --   x1       second most significant word;
  --   x2       third most significant word;
  --   x3       fourth most significant word;
  --   x4       fifth most significant word;
  --   x5       sixth most significant word;
  --   x6       seventh most significant word;
  --   x7       eighth most significant word;
  --   x8       least significant word.

  -- ON RETURN :
  --   r0       highest part of an octo double number;
  --   r1       second highest part of an octo double number;
  --   r2       third highest part of an octo double number.
  --   r3       fourth highest part of an octo double number;
  --   r4       fourth lowest part of an octo double number;
  --   r5       third lowest part of an octo double number;
  --   r6       second lowest part of an octo double number;
  --   r7       lowest part of an octo double number.

  procedure renorm_add1
              ( x0,x1,x2,x3,x4,x5,x6,x7 : in double_float;
                y : in double_float;
                r0,r1,r2,r3,r4,r5,r6,r7 : out double_float );

  -- DESCRIPTION :
  --   The definition is based on renorm2L_4Add1<8,8>
  --   from code of the specRenorm.h, generated by the CAMPARY library,
  --   in an unrolled form (Valentina Popescu, Mioara Joldes), with
  --   double double basics of QD-2.3.9 (Y. Hida, X.S. Li, and D.H. Bialey).

  -- ON ENTRY :
  --   x0       most significant word of an octo double x;
  --   x1       second most significant word of an octo double x;
  --   x2       third most significant word of an octo double x;
  --   x3       fourth most significant word of an octo double x;
  --   x4       fourth least significant word of an octo double x;
  --   x5       third least significant word of an octo double x;
  --   x6       second least significant word of an octo double x;
  --   x7       least significant word of an octo double x;
  --   y        double to be added to x.

  -- ON RETURN :
  --   r0       most significant word of x + y;
  --   r1       second most significant word of x + y;
  --   r2       third most significant word of x + y;
  --   r3       fourth most significant word of x + y;
  --   r4       fourth least significant word of x + y;
  --   r5       third least significant word of x + y;
  --   r6       second least significant word of x + y;
  --   r7       least significant word of x + y.

end Fast_Double_Renormalizations;
