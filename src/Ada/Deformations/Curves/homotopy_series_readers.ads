with Standard_Natural_Numbers;          use Standard_Natural_Numbers;
with Standard_Integer_Numbers;          use Standard_Integer_Numbers;
with Standard_Complex_Numbers;
with Standard_Complex_Vectors;
with Standard_Complex_Solutions;
with Standard_Dense_Series_Vectors;
with DoblDobl_Complex_Numbers;
with DoblDobl_Complex_Vectors;
with DoblDobl_Complex_Solutions;
with DoblDobl_Dense_Series_Vectors;
with QuadDobl_Complex_Numbers;
with QuadDobl_Complex_Vectors;
with QuadDobl_Complex_Solutions;
with QuadDobl_Dense_Series_Vectors;

package Homotopy_Series_Readers is

-- DESCRIPTION :
--   Provides interactive procedures to setup of homotopies of series,
--   in double, double double, and quad double precision.
--   The homotopy is an artificial parameter homotopy.

  procedure Standard_Reader
              ( nbequ : out integer32;
                sols : out Standard_Complex_Solutions.Solution_List;
                tpow : in natural32;
                gamma : in Standard_Complex_Numbers.Complex_Number );
  procedure DoblDobl_Reader
              ( nbequ : out integer32;
                sols : out DoblDobl_Complex_Solutions.Solution_List;
                tpow : in natural32;
                gamma : in DoblDobl_Complex_Numbers.Complex_Number );
  procedure QuadDobl_Reader
              ( nbequ : out integer32;
                sols : out QuadDobl_Complex_Solutions.Solution_List;
                tpow : in natural32;
                gamma : in QuadDobl_Complex_Numbers.Complex_Number );

  -- DESCRIPTION :
  --   Prompts for a target system, a start system with start solutions.
  --   The target and start system are stored in the Homotopy package.
  --   The given power tpow of the continuation parameter and 
  --   the given accessibility constant gamma will be used.

  -- ON ENTRY :
  --   tpow     power of the continuation parameter
  --            in the artificial parameter homotopy;
  --   gamma    value for the accessibility constant.

  -- ON RETURN :
  --   nbequ    number of equations in the systems in the homotopy;
  --   sols     start solutions in the homotopy.

  procedure Standard_Reader
              ( nbequ : out integer32;
                sols : out Standard_Complex_Solutions.Solution_List;
                tpow : in natural32 := 2 );
  procedure DoblDobl_Reader
              ( nbequ : out integer32;
                sols : out DoblDobl_Complex_Solutions.Solution_List;
                tpow : in natural32 := 2 );
  procedure QuadDobl_Reader
              ( nbequ : out integer32;
                sols : out QuadDobl_Complex_Solutions.Solution_List;
                tpow : in natural32 := 2 );

  -- DESCRIPTION :
  --   Prompts for a target system, a start system with start solutions.
  --   The target and start system are stored in the Homotopy package.
  --   A random gamma constant will be generated by default.

  -- ON ENTRY :
  --   tpow     power of the continuation parameter
  --            in the artificial parameter homotopy.

  -- ON RETURN :
  --   nbequ    number of equations in the systems in the homotopy;
  --   sols     start solutions in the homotopy.

  procedure Standard_Parameter_Reader
              ( nbequ,nbvar,idxpar : out integer32;
                sols : out Standard_Complex_Solutions.Solution_List );
  procedure DoblDobl_Parameter_Reader
              ( nbequ,nbvar,idxpar : out integer32;
                sols : out DoblDobl_Complex_Solutions.Solution_List );
  procedure QuadDobl_Parameter_Reader
              ( nbequ,nbvar,idxpar : out integer32;
                sols : out QuadDobl_Complex_Solutions.Solution_List );

  -- DESCRIPTION :
  --   Prompts the user for a natural parameter homotopy and start solutions
  --   in double, double double, or quad double precision.
  --   Assumes there is only one natural parameter.

  -- ON RETURN :
  --   nbequ    number of equations;
  --   nbvar    number of variables;
  --   idxpar   index of the variable which is the natural parameter;
  --   sols     start solutions in the homotopy.

  procedure Standard_Series_Newton
              ( sol : in Standard_Complex_Vectors.Vector;
                idx,nbequ : in integer32; nbterms,nbiters : in natural32;
                srv,eva : out Standard_Dense_Series_Vectors.Vector );
  procedure Standard_Series_Newton
              ( sol : in Standard_Complex_Solutions.Solution;
                idx,nbequ : in integer32; nbterms,nbiters : in natural32;
                srv,eva : out Standard_Dense_Series_Vectors.Vector );
  procedure DoblDobl_Series_Newton
              ( sol : in DoblDobl_Complex_Vectors.Vector;
                idx,nbequ : in integer32; nbterms,nbiters : in natural32;
                srv,eva : out DoblDobl_Dense_Series_Vectors.Vector );
  procedure DoblDobl_Series_Newton
              ( sol : in DoblDobl_Complex_Solutions.Solution;
                idx,nbequ : in integer32; nbterms,nbiters : in natural32;
                srv,eva : out DoblDobl_Dense_Series_Vectors.Vector );
  procedure QuadDobl_Series_Newton
              ( sol : in QuadDobl_Complex_Vectors.Vector;
                idx,nbequ : in integer32; nbterms,nbiters : in natural32;
                srv,eva : out QuadDobl_Dense_Series_Vectors.Vector );
  procedure QuadDobl_Series_Newton
              ( sol : in QuadDobl_Complex_Solutions.Solution;
                idx,nbequ : in integer32; nbterms,nbiters : in natural32;
                srv,eva : out QuadDobl_Dense_Series_Vectors.Vector );

  -- DESCRIPTION :
  --   Given a start solution in the stored homotopy,
  --   runs Newton's method to compute a series solution,
  --   in double, double double, or quad double precision.

  -- ON ENTRY :
  --   idx      index of the parameter in the series, relative to
  --            the variables in the homotopy, in an arficial parameter
  --            homotopy for square systems, idx = nbequ + 1;
  --   nbequ    number of equations in the homotopy;
  --   nbterms  number of the terms in the series;
  --   nbiters  maximum number of iterations in Newton's method.

  -- ON RETURN :
  --   srv      series approximation for the solution;
  --   eva      evaluated series.

end Homotopy_Series_Readers;
